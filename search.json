[{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright c 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://sfcheung.github.io/semptools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Shu Fai Cheung  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. semptools Copyright (C) 2019 Shu Fai Cheung This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://sfcheung.github.io/semptools/articles/keep_or_drop_nodes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Keep or Drop Selected Variables","text":"psychological research, common path analytic model several control variables. need included analysis. However, generating plot, acceptable omit long results regarding control variables reported forms (e.g., table parameter estimates), keep main variables plot. Two helper functions, drop_nodes keep_nodes, package semptools (CRAN page), developed purpose. SEM output object, output lavaan, passed semPlot::semPaths, first processed semPlot::semPlotModel. words, semPlot::semPaths interpret SEM output. actually use output semPlot::semPlotModel generate plot. helper functions modify output semPlot::semPlotModel used semPlot::semPaths.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/keep_or_drop_nodes.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Keep or Drop Selected Variables","text":"Suppose model four main variables, x1, x2, x3, x4, three control variables, cov1, cov2, cov3. sample data, pa_example_3covs, package semptools. analysis lavaan: can plot full model using semPlot::semPaths use layout layout_matrix control positions seven variables (please refer vignette layou_matrix ):  Suppose want remove cov1, cov2, cov3. calling semPlot::semPlotModel directly, modify keep_nodes drop_nodes. can drop cov1, cov2, cov3 drop_nodes: first argument, object, output semPlot::semPlotModel. example, semPlotModel(fit) used call semPlot::semPlotModel process fit pass results immediately drop_nodes. second argument, nodes, character vector names variables dropped. just two arguments, argument names can omitted: can use semPlot::semPaths plot modified model:  Note call semPlot::semPaths, modified output semPlot::semPlotModel, pm_no_covs, used instead fit, output lavaan. Alternatively, can also specify variables keep using keep_nodes. used similar way, except variables specified nodes kept, variables specified removed.  plot identical previous plot. plot generated semPlot::semPaths selected nodes dropped kept can passed semptools functions processing.","code":"library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. mod <-   'x3 ~  x1 + x2 + cov1 + cov2 + cov3    x4 ~  x1 + x3 + cov1 + cov2 + cov3   ' fit <- lavaan::sem(mod, pa_example_3covs) library(semPlot) library(semptools) m <- layout_matrix(x1 = c(1, 1),                    x2 = c(3, 1),                    x3 = c(2, 2),                    x4 = c(2, 3),                    cov1 = c(4, 1),                    cov2 = c(5, 1),                    cov3 = c(6, 1)) p_pa <- semPaths(fit, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = .5,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) pm_no_covs <- semptools::drop_nodes(                 object = semPlotModel(fit),                 nodes = c(\"cov1\", \"cov2\", \"cov3\")) pm_no_covs <- semptools::drop_nodes(                 semPlotModel(fit),                 c(\"cov1\", \"cov2\", \"cov3\")) m_no_covs <- layout_matrix(x1 = c(1, 1),                            x2 = c(3, 1),                            x3 = c(2, 2),                            x4 = c(2, 3)) pa_no_covs <- semPaths(pm_no_covs, whatLabels = \"est\",                     sizeMan = 10,                     edge.label.cex = .5,                     style = \"ram\",                     nCharNodes = 0, nCharEdges = 0,                     layout = m_no_covs) pm_only_xs <- semptools::keep_nodes(                 semPlotModel(fit),                 c(\"x1\", \"x2\", \"x3\", \"x4\")) pa_only_xs <- semPaths(pm_only_xs, whatLabels = \"est\",                     sizeMan = 10,                     edge.label.cex = .5,                     style = \"ram\",                     nCharNodes = 0, nCharEdges = 0,                     layout = m_no_covs)"},{"path":"https://sfcheung.github.io/semptools/articles/keep_or_drop_nodes.html","id":"keep-or-drop-it-depends","dir":"Articles","previous_headings":"","what":"Keep Or Drop? It Depends","title":"Keep or Drop Selected Variables","text":"function use depends one easier specify. example, lot contorl variables main variables, efficient use keep_nodes specify main variables. number control variables substantially less number main variables, efficient use drop_nodes specify control variables drop.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/layout_matrix.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Layout Matrices","text":"One useful feature semPlot::semPaths() package semptools (CRAN page) using setting argument layout layout matrix specify location node structural equation model. guide briefly explains use layout, introduces helper function layout_matrix() semptools can used construct layout matrix. Last, describes factor_layout used set_sem_layout() specify layout latent factors , let set_sem_layout() decide positions indicators.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/layout_matrix.html","id":"what-layout-does-in-semplotsempaths-","dir":"Articles","previous_headings":"","what":"What layout Does in semPlot::semPaths.","title":"Layout Matrices","text":"Suppose path model four variables, x1, x2, x3, x4. x1 x2 affects x3, x1 x3 affects x4. psychology, model usually presented way:  fit model lavaan::lavaan() use semPlot::semPaths() generate plot without using layout, resulting plot:  layout different convention used psychology. use layout, first decide grid used position variable (nodes). example, conceptual diagram, can try 3 4 grid  pair numbers cell denote location cell 3 4 matrix indexed R matrix. empty column added x3 x4 want move x4 away right. create matrix dimension grid, initialize cells NA, denoted cell nothing. set position variable (node, called internally plot semPlot::semPaths()) setting corresponding cell name variable appeared lavaan model. can set layout matrix tell semPlot::semPaths() position four variables:  Alternatively, can type matrix appear printed, set byrow = TRUE: need type need include NA empty cells. However, approach let us see immediately variables positioned. just place variables target cell, without knowing coordinates. WYSIWYG (--see----get) approach. approach used Quick Start Guides.","code":"library(lavaan) library(semPlot) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0) m <- matrix(NA, 3, 4) m #>      [,1] [,2] [,3] [,4] #> [1,]   NA   NA   NA   NA #> [2,]   NA   NA   NA   NA #> [3,]   NA   NA   NA   NA m[1, 1] <- \"x1\" m[3, 1] <- \"x2\" m[2, 2] <- \"x3\" m[2, 4] <- \"x4\" m #>      [,1] [,2] [,3] [,4] #> [1,] \"x1\" NA   NA   NA   #> [2,] NA   \"x3\" NA   \"x4\" #> [3,] \"x2\" NA   NA   NA p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) m #>      [,1] [,2] [,3] [,4] #> [1,] \"x1\" NA   NA   NA   #> [2,] NA   \"x3\" NA   \"x4\" #> [3,] \"x2\" NA   NA   NA"},{"path":"https://sfcheung.github.io/semptools/articles/layout_matrix.html","id":"layout_matrix-in-semptools","dir":"Articles","previous_headings":"","what":"layout_matrix() in semptools","title":"Layout Matrices","text":"WYSIWYG approach previous section one drawback: easy change position variables dimension grid. real research, trial--error usually needed find desirable layout. example, want add column row, need ty type several NAs crate . layout_matrix() function semptools designed generate matrix using coordinates variables. Instead specifying dimension , layout_matrix() try figure dimension based coordinates automatically. example, generate layout , can :  Suppose want move x4 closer x3. Instead deleting 3rd columns NA, can just change coordinates x4 layout_matrix():  best approach specify layout depends situation hand. trial--error phrase, using layout_matrix() good changing layout. layout finalized, readability, typing matrix row--row may better (although can still use layout_matrix() form matrix print matrix, ).","code":"m2 <- layout_matrix(x1 = c(1, 1),                     x2 = c(3, 1),                     x3 = c(2, 2),                     x4 = c(2, 4)) m2 #>      [,1] [,2] [,3] [,4] #> [1,] \"x1\" NA   NA   NA   #> [2,] NA   \"x3\" NA   \"x4\" #> [3,] \"x2\" NA   NA   NA p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m2) m3 <- layout_matrix(x1 = c(1, 1),                     x2 = c(3, 1),                     x3 = c(2, 2),                     x4 = c(2, 3)) m3 #>      [,1] [,2] [,3] #> [1,] \"x1\" NA   NA   #> [2,] NA   \"x3\" \"x4\" #> [3,] \"x2\" NA   NA p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m3)"},{"path":"https://sfcheung.github.io/semptools/articles/layout_matrix.html","id":"factor_layout-in-set_sem_layout","dir":"Articles","previous_headings":"","what":"factor_layout in set_sem_layout()","title":"Layout Matrices","text":"use layout semPlot::semPaths() structural models latent factors want draw factors indicators, need specify positions nodes, , indicators factors. grid large difficult determine positions indicators. factor_layout argument set_sem_layout() developed solve problem. works like layout semPlot::semPaths(). set_sem_layout(), need specify positions latent factors. layout, create matrix specify positions factors. procedure identical illustrated path model, approaches presented can used. difference , names latent factors need present matrix, size grid need consider factors. example, suppose 14 indicators four factors, model: want draw factors indicators, plot 18 nodes:  Suppose want position factors way:  , decide grid use, 3 3 example:  Therefore, matrix used: Note layout_matrix() can also used set orientation indicators factor: can use matrix set_sem_layout() (please refer vignette(\"quick_start_sem\") ?set_sem_layout specify arguments):  make much easier specify positions factors structural equation model latent factors.","code":"mod <-   'f1 =~ x01 + x02 + x03    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10    f4 =~ x11 + x12 + x13 + x14    f3 ~  f1 + f2    f4 ~  f1 + f3   ' fit <- lavaan::sem(mod, cfa_example) p <- semPaths(fit, whatLabels=\"est\",         sizeMan = 5,         node.width = 1,         edge.label.cex = .75,         style = \"ram\",         mar = c(5, 5, 5, 5)) m_sem <- layout_matrix(f1 = c(1, 1),                     f2 = c(3, 1),                     f3 = c(2, 2),                     f4 = c(2, 3)) m_sem #>      [,1] [,2] [,3] #> [1,] \"f1\" NA   NA   #> [2,] NA   \"f3\" \"f4\" #> [3,] \"f2\" NA   NA point_to <- layout_matrix(left = c(1, 1),                           left = c(3, 1),                           down = c(2, 2),                           up = c(2, 3)) indicator_order  <- c(\"x04\", \"x05\", \"x06\", \"x07\",                       \"x01\", \"x02\", \"x03\",                       \"x11\", \"x12\", \"x13\", \"x14\",                       \"x08\", \"x09\", \"x10\") indicator_factor <- c( \"f2\",  \"f2\",  \"f2\",  \"f2\",                        \"f1\",  \"f1\",  \"f1\",                        \"f4\",  \"f4\",  \"f4\",  \"f4\",                        \"f3\",  \"f3\",  \"f3\") indicator_push <- c(f3 = 2.5,                     f4 = 2.5,                     f1 = 1.5,                     f2 = 1.5) indicator_spread <- c(f1 = 2,                       f2 = 2,                       f3 = 2,                       f4 = 1.75) loading_position <- c(f2 = .6,                       f3 = .8,                       f4 = .8) p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = m_sem,                      factor_point_to = point_to,                      indicator_push = indicator_push,                      indicator_spread = indicator_spread,                      loading_position = loading_position) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quick Start To set_cfa_layout","text":"package semptools (CRAN page) contains functions post-process output semPlot::semPaths(), help users customize appearance graphs generated semPlot::semPaths(). introduction functions specific tasks, moving parameter estimate path rotating residual variable, please refer vignette(\"semptools\"). present guide focuses use set_cfa_layout() configure various aspects semPaths graph generated typical confirmatory factor analysis (CFA) model.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"the-initial-sempaths-graph","dir":"Articles","previous_headings":"","what":"The Initial semPaths Graph","title":"Quick Start To set_cfa_layout","text":"Let us consider CFA model. use cfa_example, sample CFA dataset semptools 14 variables illustration. CFA model fitted: Fitting model lavaan::cfa() plot semPlot::semPaths():  default layout sufficient quick examination results. see set_cfa_layout() can used following tasks post-process graph: Change order indicators. Change order factors. Change curvature inter-factor covariances. Move loadings along paths factors indicators. Rotate graph.","code":"library(semptools) head(round(cfa_example, 3), 3) #>      x01    x02    x03    x04    x05    x06    x07   x08   x09    x10    x11 #> 1  1.159  1.271  1.451 -0.691 -0.015 -0.212 -0.336 1.559 0.870  1.115 -1.251 #> 2  0.059 -0.496 -0.585 -1.800 -0.555  0.012  1.208 0.551 0.055 -0.365 -0.142 #> 3 -0.737  2.933  1.625  0.642 -1.218 -0.155 -0.861 0.862 0.738  2.443 -0.628 #>     x12    x13    x14 #> 1 0.253  0.663 -1.049 #> 2 0.110 -0.207 -0.226 #> 3 1.604 -1.688  0.395 mod <-   'f1 =~ x01 + x02 + x03    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10    f4 =~ x11 + x12 + x13 + x14   ' library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. fit <- lavaan::cfa(mod, cfa_example) library(semPlot) p <- semPaths(fit, whatLabels=\"est\",         sizeMan = 3.25,         node.width = 1,         edge.label.cex = .75,         style = \"ram\",         mar = c(10, 5, 10, 5))"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"order-the-indicators-and-factors","dir":"Articles","previous_headings":"","what":"Order the Indicators and Factors","title":"Quick Start To set_cfa_layout","text":"Suppose want : Order factors way, left right: f2, f1, f4, f3 Order indicators way, left right: x04, x05, x06, x07, x01, x02, x03, x11, x12, x13, x14, x08, x09, x10 like place factors way: f2 center x04, x05, x06, x07. f1 center x01, x02, x03. f4 center x11, x12, x13, x14. f3 center x08, x09, x10. , create two vectors, one argument indicator_order argument indicator_factor. indicator_order string vector length equal number indicators, desired order. example, like : indicator_factor string vector length equal number indicators. elements names latent factors, denoting indicators used compute mean positions place latent factors: set_cfa_layout() function needs least three arguments: semPaths_plot: semPaths plot. indicator_order: vector order indicators. indicator_factor: vector placement latent factors. named order. now use set_cfa_layout() post-process graph:","code":"indicator_order  <- c(\"x04\", \"x05\", \"x06\", \"x07\",                       \"x01\", \"x02\", \"x03\",                       \"x11\", \"x12\", \"x13\", \"x14\",                       \"x08\", \"x09\", \"x10\") indicator_factor <- c( \"f2\",  \"f2\",  \"f2\",  \"f2\",                        \"f1\",  \"f1\",  \"f1\",                        \"f4\",  \"f4\",  \"f4\",  \"f4\",                        \"f3\",  \"f3\",  \"f3\") p2 <- set_cfa_layout(p,                      indicator_order,                      indicator_factor) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"change-the-curvatures-of-the-factor-covariances","dir":"Articles","previous_headings":"","what":"Change the Curvatures of the Factor Covariances","title":"Quick Start To set_cfa_layout","text":"graph factors indicators ordered required. However, inter-factor covariances close factors. increases curvatures covariances, can use argument fcov_curve. default .4. Let us increase 1.75.  covariances now readable. exact effect values vary graph graph. Therefore, trial error required find value suitable graph.","code":"p2 <- set_cfa_layout(p,                      indicator_order,                      indicator_factor,                      fcov_curve = 1.75) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"move-the-loadings","dir":"Articles","previous_headings":"","what":"Move the Loadings","title":"Quick Start To set_cfa_layout","text":"can also move factor loadings together using argument loading_position. default value .5, middle paths. want move loadings closer indicators, increase number. want move loadings closer indicators, decrease number. following example, move loadings closer indicators, increase distance process.  factor loadings now easier read, also closer corresponding indicators.","code":"p2 <- set_cfa_layout(p,                      indicator_order,                      indicator_factor,                      fcov_curve = 1.75,                      loading_position = .8) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"rotate-the-model","dir":"Articles","previous_headings":"","what":"Rotate the Model","title":"Quick Start To set_cfa_layout","text":"default orientation “pointing downwards”: latent factors top, pointing indicators bottom. orientation can set one four directions: (default), left, , right. done argument point_to.","code":"p2 <- set_cfa_layout(p,                      indicator_order,                      indicator_factor,                      fcov_curve = 1.75,                      loading_position = .8,                      point_to = \"up\") plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"pipe","dir":"Articles","previous_headings":"","what":"Pipe","title":"Quick Start To set_cfa_layout","text":"Like functions semptools, set_cfa_layout() function can chained functions using pipe operator, %>%, package magrittr, native pipe operator |> available since R 4.1.x. Suppose want mark significant test results free parameters using mark_sig():","code":"# If R version >= 4.1.0 p2 <- set_cfa_layout(p,                      indicator_order,                      indicator_factor,                      fcov_curve = 1.75,                      loading_position = .9,                      point_to = \"up\") |>       mark_sig(fit) plot(p2) #> Loading required package: magrittr"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_cfa.html","id":"limitations","dir":"Articles","previous_headings":"","what":"Limitations","title":"Quick Start To set_cfa_layout","text":"Currently, function needs SEM output, lavaan output supported.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quick Start To set_sem_layout","text":"package semptools (CRAN page) contains functions post-process output semPlot::semPaths(), help users customize appearance graphs generated semPlot::semPaths(). introduction functions specific tasks, moving parameter estimate path rotating residual variable, please refer vignette(\"semptools\"). present guide focuses use set_sem_layout() configure various aspects semPaths graph generated typical structural equation model (SEM) latent factors. configuring layout confirmatory factor analysis (CFA) model structural path factors, please refer vignette(\"quick_start_cfa\").","code":""},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"the-initial-sempaths-graph","dir":"Articles","previous_headings":"","what":"The Initial semPaths Graph","title":"Quick Start To set_sem_layout","text":"Let us consider SEM model. use sem_example, sample CFA dataset semptools 14 variables illustration. SEM model fitted: Fitting model using lavaan::sem(): plot semPaths:  see set_sem_layout() can used following tasks post-process graph: Change order indicators. Assign factors indicators manually. Specify set approximate positions factors. Specify place indicators factor. Adjust placement indicators relative corresponding factors. Move loadings along paths factors indicators.","code":"library(semptools) head(round(sem_example, 3), 3) #>      x01    x02    x03    x04    x05    x06    x07    x08    x09    x10   x11 #> 1  2.861  2.289  3.381  0.191  0.095 -0.395 -0.060  1.320  2.807  2.330 2.069 #> 2 -0.246 -1.299 -0.371  2.232 -0.419 -0.565 -0.162  3.050  1.513  1.777 2.991 #> 3  0.079  0.067  0.323 -3.043 -1.093 -0.626 -1.961 -4.908 -2.048 -3.190 1.403 #>     x12    x13   x14 #> 1 0.569 -0.808 1.989 #> 2 2.125  0.767 1.539 #> 3 1.888  1.356 1.107 mod <-   'f1 =~ x01 + x02 + x03    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10    f4 =~ x11 + x12 + x13 + x14    f3 ~  f1 + f2    f4 ~  f1 + f3   ' library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. fit <- lavaan::sem(mod, cfa_example) library(semPlot) p <- semPaths(fit, whatLabels=\"est\",         sizeMan = 5,         node.width = 1,         edge.label.cex = .75,         style = \"ram\",         mar = c(5, 5, 5, 5))"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"assign-indicators-to-factors","dir":"Articles","previous_headings":"","what":"Assign Indicators to Factors","title":"Quick Start To set_sem_layout","text":"section describes set order indicators, assign factors, specify approximate positions factors. Suppose want : like assign indicators factors way: x04, x05, x06, x07 f2. x01, x02, x03 f1. x11, x12, x13, x14 f4. x08, x09, x10 f3. , create two vectors, one argument indicator_order argument indicator_factor. indicator_order string vector length equal number indicators, desired order indicators placed corresponding factors. example, like : indicator_factor string vector length equal number indicators. elements names latent factors, denoting factor indicator assigned : specify locations factors, need two arguments, factor_layout factor_point_to. factor_layout matrix arbitrary size, either NA name factor. example: sets 3--3 grid, f1 top left, f2 bottom left, f3 center, f4 right f3. factor must one one cell matrix. Note column row can contain NA, increase vertical horizontal distance factors. helper function layout_matrix() can also used create matrix used factor_layout (see vignette(\"layout_matrix\") use layout_matrix()): factor_point_to matrix size factor_layout, either NA one : “”, “left”, “”, “right”, indicate direction factor “points ” indicator. example: f1 f2 point left (.e., indicators left), f3 f4 point downwards. layout_matrix() can also used create matrix: sum, set_sem_layout() function needs least arguments: semPaths_plot: semPaths plot. indicator_order: vector order indicators. indicator_factor: vector assigning indicators latent factors. factor_layout: position factors grid. factor_point_to: placement indicators. named order. now use set_sem_layout() post-process graph:","code":"indicator_order  <- c(\"x04\", \"x05\", \"x06\", \"x07\",                       \"x01\", \"x02\", \"x03\",                       \"x11\", \"x12\", \"x13\", \"x14\",                       \"x08\", \"x09\", \"x10\") indicator_factor <- c( \"f2\",  \"f2\",  \"f2\",  \"f2\",                        \"f1\",  \"f1\",  \"f1\",                        \"f4\",  \"f4\",  \"f4\",  \"f4\",                        \"f3\",  \"f3\",  \"f3\") factor_layout <- matrix(c(\"f1\",   NA,   NA,                            NA, \"f3\", \"f4\",                          \"f2\",   NA,   NA), byrow = TRUE, 3, 3) factor_layout <- layout_matrix(f1 = c(1, 1),                                f2 = c(3, 1),                                f3 = c(2, 2),                                f4 = c(2, 3)) factor_layout #>      [,1] [,2] [,3] #> [1,] \"f1\" NA   NA   #> [2,] NA   \"f3\" \"f4\" #> [3,] \"f2\" NA   NA factor_point_to <- matrix(c(\"left\",     NA,      NA,                                 NA, \"down\", \"down\",                             \"left\",     NA,      NA), byrow = TRUE, 3, 3) factor_point_to <- layout_matrix(left = c(1, 1),                                  left = c(3, 1),                                  down = c(2, 2),                                  down = c(2, 3)) factor_point_to #>      [,1]   [,2]   [,3]   #> [1,] \"left\" NA     NA     #> [2,] NA     \"down\" \"down\" #> [3,] \"left\" NA     NA p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = factor_layout,                      factor_point_to = factor_point_to) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"move-indicators","dir":"Articles","previous_headings":"","what":"Move Indicators","title":"Quick Start To set_sem_layout","text":"placement indicators close indicators neighboring indicators. can adjust relative position two ways.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"push-the-indicators-away","dir":"Articles","previous_headings":"Move Indicators","what":"“Push” the indicators away","title":"Quick Start To set_sem_layout","text":"can use argument indicator_push push indicators factor away . argument needs named vector. name factor indictors “pushed”, value “hard” push : multiplier distance factor indicators. example: vector double distance indicators f3 factors, multiply distance indicators f4, f1, f2 factors 1.5. push less 1, indicators “pulled” towards factors.","code":"indicator_push <- c(f3 = 2,                     f4 = 1.5,                     f1 = 1.5,                     f2 = 1.5) p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = factor_layout,                      factor_point_to = factor_point_to,                      indicator_push = indicator_push) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"spread-out-the-indicators","dir":"Articles","previous_headings":"Move Indicators","what":"“Spread” out the indicators","title":"Quick Start To set_sem_layout","text":"can use argument indicator_spread spread indicators factor, increasing distance indicators. argument needs named vector. name factor indicators spread . value multiplier distance neighboring indicators. example: vector double distance indicators f1, multiply distance indicators f2 f4. indicators 1.5. spread less 1, indicators squeezed towards others.","code":"indicator_spread <- c(f1 = 2,                       f2 = 1.5,                       f4 = 1.5) p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = factor_layout,                      factor_point_to = factor_point_to,                      indicator_push = indicator_push,                      indicator_spread = indicator_spread) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"move-the-loadings","dir":"Articles","previous_headings":"","what":"Move the Loadings","title":"Quick Start To set_sem_layout","text":"can move loadings indicators along paths argument loading_position. supply one single number, 0 1, number used position loadings. value .5 place loadings middle paths. Larger value, closer loadings indicators. Smaller value, closer loadings factors. can also use named vector specify positions indicators factor.element, name factor whose loadings moved. value positions loadings. default .50. need specify positions factors changed .50 values. example:","code":"loading_position <- c(f2 = .7,                       f3 = .8,                       f4 = .8) p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = factor_layout,                      factor_point_to = factor_point_to,                      indicator_push = indicator_push,                      indicator_spread = indicator_spread,                      loading_position = loading_position) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"pipe","dir":"Articles","previous_headings":"","what":"Pipe","title":"Quick Start To set_sem_layout","text":"Like functions semptools, set_sem_layout() function can chained functions using pipe operator, %>%, package magrittr, native pipe operator |> available since R 4.1.x. Suppose want mark significant test results free parameters using mark_sig(), use set_curve() change curvature f1 ~~ f2 covariances f4 ~ f1 paths (push spread indicators make room asterisks, change orientation f4 ):","code":"# If R version >= 4.1.0 p2 <- set_sem_layout(p,                     indicator_order = indicator_order,                     indicator_factor = indicator_factor,                     factor_layout = factor_layout,                     factor_point_to = factor_point_to,                     indicator_push = indicator_push,                     indicator_spread = indicator_spread,                     loading_position = loading_position) |>                     set_curve(c(\"f2 ~~ f1\" = -1,                                 \"f4 ~ f1\" = 1.5)) |>                     mark_sig(fit) plot(p2) #> Loading required package: magrittr"},{"path":"https://sfcheung.github.io/semptools/articles/quick_start_sem.html","id":"limitations","dir":"Articles","previous_headings":"","what":"Limitations","title":"Quick Start To set_sem_layout","text":"Currently, function needs SEM output, lavaan output supported.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/second_order.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Models with Second-Order Factors","text":"article illustrates use set_sem_layout() package semptools (CRAN page) model second-order factors. Readers assumed learned use set_sem_layout() (see vignette(\"quick_start_sem\")).","code":""},{"path":"https://sfcheung.github.io/semptools/articles/second_order.html","id":"the-initial-sempaths-plot","dir":"Articles","previous_headings":"","what":"The Initial semPaths Plot","title":"Models with Second-Order Factors","text":"use sem_2nd_order_example, sample SEM dataset semptools 21 variables illustration. SEM model fitted: Fitting model using lavaan::sem(): plot semPaths:","code":"library(semptools) head(round(sem_2nd_order_example, 3), 3) #>     x01    x02   x03   x04    x05    x06    x07    x08    x09    x10    x11 #> 1 0.773  0.246 0.959 1.819 -0.193  3.025  2.311  0.403  1.722  0.758  0.645 #> 2 0.757  0.303 0.139 0.516  0.514  2.145 -0.589  1.667 -0.001  2.513  2.381 #> 3 0.665 -1.135 0.199 0.764 -0.098 -1.293  1.481 -3.501 -1.215 -1.614 -0.073 #>      x12    x13    x14   x15    x16    x17    x18    x19    x20   x21 #> 1 -0.813  0.609  1.323 1.852  0.428 -0.284 -1.106  0.509  1.111 0.483 #> 2  2.102 -0.805  2.567 1.097 -0.288 -1.007  0.530 -0.722 -0.590 1.164 #> 3 -0.150  0.639 -1.507 0.860 -0.899 -0.882 -1.275 -0.616 -0.975 0.007 mod <-   'f1 =~ x01 + x02 + x03    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10    f4 =~ x11 + x12 + x13 + x14    f5 =~ x15 + x16 + x17 + x18    f6 =~ x19 + x20 + x21    f21 =~ 1*f1 + f3 + f4    f22 =~ 1*f2 + f5 + f6    f22 ~ f21   ' library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. fit <- lavaan::sem(mod, sem_2nd_order_example) library(semPlot) p <- semPaths(fit, whatLabels = \"est\",               sizeMan = 5,               nCharNodes = 0, nCharEdges = 0,               edge.width = 0.8, node.width = 0.7,               edge.label.cex = 0.6,               style = \"ram\",               mar = c(5, 5, 5, 5))"},{"path":"https://sfcheung.github.io/semptools/articles/second_order.html","id":"modify-the-plot","dir":"Articles","previous_headings":"","what":"Modify the Plot","title":"Models with Second-Order Factors","text":"described vignette(\"set_sem_layout\"), plot can modified set_sem_layout(), special treatment:","code":""},{"path":"https://sfcheung.github.io/semptools/articles/second_order.html","id":"special-treatment","dir":"Articles","previous_headings":"Modify the Plot","what":"Special Treatment","title":"Models with Second-Order Factors","text":"modify plot second order factors: “indicators” second-order factor need included vector indicator_order argument. matrix factor_layout, factors, first second order, included. Although second-order factor latent factors indicators, direction second-order factor factor_point_to matrix ignored. position indicators second-order factor determined factor_layout matrix. example , f1 f6, though latent factors , included vector indicator_order.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/second_order.html","id":"example","dir":"Articles","previous_headings":"Modify the Plot","what":"Example","title":"Models with Second-Order Factors","text":"result:  layout acceptable. can modified functions described vignette(\"semptools\"). example, residuals can rotated:","code":"indicator_order  <- c(\"x01\", \"x03\", \"x02\",                       \"x05\", \"x06\", \"x04\", \"x07\",                       \"x08\", \"x09\", \"x10\",                       \"x12\", \"x11\", \"x13\", \"x14\",                       \"x16\", \"x15\", \"x18\", \"x17\",                       \"x20\", \"x19\", \"x21\",                       \"f1\", \"f3\", \"f4\",                       \"f5\", \"f6\", \"f2\") indicator_factor <- c(\"f1\", \"f1\", \"f1\",                       \"f2\", \"f2\", \"f2\", \"f2\",                       \"f3\", \"f3\", \"f3\",                       \"f4\", \"f4\", \"f4\", \"f4\",                       \"f5\", \"f5\", \"f5\", \"f5\",                       \"f6\", \"f6\", \"f6\",                       \"f21\", \"f21\", \"f21\",                       \"f22\", \"f22\", \"f22\") factor_layout <- matrix(c(  NA, \"f21\",   NA, NA,  NA, \"f22\",   NA,                           \"f1\",  \"f4\", \"f3\", NA, \"f2\",  \"f6\", \"f5\"),                           byrow = TRUE, 2, 7) factor_layout <- matrix(c(\"f1\",    NA,    NA, \"f2\",                           \"f4\", \"f21\", \"f22\", \"f6\",                           \"f3\",    NA,    NA, \"f5\"),                           byrow = TRUE, 3, 4) factor_point_to <- matrix(c(\"left\",     NA,      NA, \"right\",                             \"left\", \"left\", \"right\", \"right\",                             \"left\",     NA,      NA, \"right\"),                             byrow = TRUE, 3, 4) indicator_spread <- c(f4 = 1.25,                       f2 = 1.25,                       f5 = 1.25) p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = factor_layout,                      factor_point_to = factor_point_to,                      indicator_spread = indicator_spread) plot(p2) my_rotate_resid_list <- c(f4  =  45,                           f21 =   0,                           f22 =   0,                           f6  = -45) p3 <- rotate_resid(p2, my_rotate_resid_list) plot(p3)"},{"path":"https://sfcheung.github.io/semptools/articles/second_order.html","id":"further-information","dir":"Articles","previous_headings":"","what":"Further information","title":"Models with Second-Order Factors","text":"Please refer vignette(\"quick_start_sem\") options set_sem_layout() use functions package.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/sem_with_observed.html","id":"goal","dir":"Articles","previous_headings":"","what":"Goal","title":"Using set_sem_layout() for a Model With Observed Exogenous Variables","text":"article illustrates use set_sem_layout() package semptools (CRAN page) model latent variables one observed exogenous variables (.k.., predictors independent variables disciplines), observed exogenous variables placed like latent variables model diagram. article assumes basic knowledge using semptools set_sem_layout() (see vignette(\"semptools\") vignette(\"quick_start_sem\") illustrations).","code":""},{"path":"https://sfcheung.github.io/semptools/articles/sem_with_observed.html","id":"model-and-data","dir":"Articles","previous_headings":"","what":"Model and Data","title":"Using set_sem_layout() for a Model With Observed Exogenous Variables","text":"following model fitted dataset sem_example, provided package semptools. fitted lavaan::sem(): model, x04 x05 exogenous observed variables. affect f3 f4 indicators latent factors.","code":"library(semptools) library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. mod <-   'f1 =~ x01 + x02 + x03    f3 =~ x08 + x09 + x10    f4 =~ x11 + x12 + x13 + x14    f3 ~ f1 + x04    f4 ~ f3 + x05' fit_sem <- lavaan::sem(mod, sem_example)"},{"path":"https://sfcheung.github.io/semptools/articles/sem_with_observed.html","id":"setting-indicator_order-and-indicator_factor","dir":"Articles","previous_headings":"","what":"Setting indicator_order and indicator_factor","title":"Using set_sem_layout() for a Model With Observed Exogenous Variables","text":"model observed variables indicators latent factors, placed vector indicator_order. observed variable indicator, include call set_sem_layout(): placed indicator_order indicator_factor latent factor indicator. matrix factor_layout, set position latent factor. need specify position indicators matrix factor_point_to. Just leave cell NA. generate basic diagram semPlot::semPaths() first: vectors indicator_order indicator_factor. Note x04 x05 appear vectors. matrix factor_layout, created layout_matrix(): matrix factor_point_to, created auto_factor_point_to() (added semptools 0.2.9.15) [^available, matrix can created manually matrix().] Last, created vectors modify diagram:","code":"library(semPlot) library(semptools) p <- semPaths(fit_sem,               whatLabels = \"est\",               sizeMan = 5,               nCharNodes = 0,               nCharEdges = 0,               edge.width = 0.8,               node.width = 0.7,               edge.label.cex = 0.6,               style = \"ram\",               mar = c(10, 10, 10, 10),               DoNotPlot = TRUE) indicator_order  <- c(\"x04\", \"x05\", \"x01\", \"x02\", \"x03\",                       \"x11\", \"x12\", \"x13\", \"x14\", \"x08\", \"x09\", \"x10\") indicator_factor <- c(\"x04\", \"x05\", \"f1\",  \"f1\",  \"f1\",                       \"f4\",  \"f4\",  \"f4\",  \"f4\",  \"f3\",  \"f3\",  \"f3\") factor_layout <- layout_matrix(f1 = c(1, 1),                                f3 = c(1, 2),                                f4 = c(1, 3),                                x04 = c(2, 1),                                x05 = c(2, 2)) factor_layout #>      [,1]  [,2]  [,3] #> [1,] \"f1\"  \"f3\"  \"f4\" #> [2,] \"x04\" \"x05\" NA factor_point_to <- auto_factor_point_to(factor_layout,                                         f1 = \"up\",                                         f3 = \"up\",                                         f4 = \"up\") factor_point_to #>      [,1] [,2] [,3] #> [1,] \"up\" \"up\" \"up\" #> [2,] NA   NA   NA indicator_spread <- c(f4 = 1.5) p2 <- set_sem_layout(p,                      indicator_order = indicator_order,                      indicator_factor = indicator_factor,                      factor_layout = factor_layout,                      factor_point_to = factor_point_to,                      indicator_spread = indicator_spread) plot(p2)"},{"path":"https://sfcheung.github.io/semptools/articles/sem_with_observed.html","id":"final-remarks","dir":"Articles","previous_headings":"","what":"Final Remarks","title":"Using set_sem_layout() for a Model With Observed Exogenous Variables","text":"information using set_sem_layout(), please refer vignette(\"quick_start_sem\"). illustrations modify path diagram semPlot::semPaths() using functions semptools, please refer vignette(\"semptools\").","code":""},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"A Quick Start Guide on Using semptools","text":"package semptools (CRAN page) contains functions post-process output semPlot::semPaths(), help users customize appearance graphs generated semPlot::semPaths(). following sections written self-contained, elements repeated, can read individually.","code":""},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"mark-all-parameter-estimates-by-asterisks-based-on-p-value-mark_sig","dir":"Articles","previous_headings":"","what":"Mark all parameter estimates by asterisks based on p-Value: mark_sig","title":"A Quick Start Guide on Using semptools","text":"Let us consider simple path analysis model: plot semPaths.  know lavaan::lavaan() output paths significant . disciplines, asterisks conventionally added indicate . However, semPlot::semPaths() . can use mark_sig() add asterisks based p-values free parameters.  first argument, semPaths_plot, output semPaths::semPlot(). second argument, object, lavaan::lavaan() output used generate plot. output needed extract p-values. default labels follow common convention: “*” p less .05, “**” p less .01, “***” p less .001. can changed argument alpha (must named second argument). E.g.:","code":"library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) parameterEstimates(fit_pa) #>   lhs op rhs   est    se     z pvalue ci.lower ci.upper #> 1  x1 ~~  x2 0.005 0.097 0.054  0.957   -0.186    0.196 #> 2  x3  ~  x1 0.537 0.097 5.551  0.000    0.348    0.727 #> 3  x3  ~  x2 0.376 0.093 4.050  0.000    0.194    0.557 #> 4  x4  ~  x1 0.111 0.127 0.875  0.382   -0.138    0.361 #> 5  x4  ~  x3 0.629 0.108 5.801  0.000    0.416    0.841 #> 6  x3 ~~  x3 0.874 0.124 7.071  0.000    0.632    1.117 #> 7  x4 ~~  x4 1.194 0.169 7.071  0.000    0.863    1.525 #> 8  x1 ~~  x1 0.933 0.132 7.071  0.000    0.674    1.192 #> 9  x2 ~~  x2 1.017 0.144 7.071  0.000    0.735    1.298 library(semPlot) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) library(semptools) p_pa2 <- mark_sig(p_pa, fit_pa) plot(p_pa2) p_pa3 <- mark_sig(p_pa, fit_pa, alpha = c(\"(n.s.)\" = 1.00, \"*\" = .01)) plot(p_pa3)"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"add-standard-error-estimates-to-parameter-estimates-mark_se","dir":"Articles","previous_headings":"","what":"Add standard error estimates to parameter estimates: mark_se","title":"A Quick Start Guide on Using semptools","text":"Let us consider simple path analysis model: plot semPlot::semPaths().  can use mark_se() add standard errors parameter estimates:  first argument, semPaths_plot, output semPaths::semPlot(). second argument, object, lavaan::lavaan() output used generate plot. output needed extra standard errors. default, standard errors enclosed parentheses appended parameter estimates, separated one space. argument sep can used use another separator. example, \"\\n\" used, standard errors displayed corresponding parameter estimates.","code":"library(lavaan) mod_pa <-   'x1 ~~ x2    x3 ~  x1 + x2    x4 ~  x1 + x3   ' fit_pa <- lavaan::sem(mod_pa, pa_example) parameterEstimates(fit_pa) #>   lhs op rhs   est    se     z pvalue ci.lower ci.upper #> 1  x1 ~~  x2 0.005 0.097 0.054  0.957   -0.186    0.196 #> 2  x3  ~  x1 0.537 0.097 5.551  0.000    0.348    0.727 #> 3  x3  ~  x2 0.376 0.093 4.050  0.000    0.194    0.557 #> 4  x4  ~  x1 0.111 0.127 0.875  0.382   -0.138    0.361 #> 5  x4  ~  x3 0.629 0.108 5.801  0.000    0.416    0.841 #> 6  x3 ~~  x3 0.874 0.124 7.071  0.000    0.632    1.117 #> 7  x4 ~~  x4 1.194 0.169 7.071  0.000    0.863    1.525 #> 8  x1 ~~  x1 0.933 0.132 7.071  0.000    0.674    1.192 #> 9  x2 ~~  x2 1.017 0.144 7.071  0.000    0.735    1.298 library(semPlot) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) library(semptools) p_pa2 <- mark_se(p_pa, fit_pa) plot(p_pa2) p_pa2 <- mark_se(p_pa, fit_pa, sep = \"\\n\") plot(p_pa2)"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"rotate-the-residuals-of-selected-variables-rotate_resid","dir":"Articles","previous_headings":"","what":"Rotate the residuals of selected variables: rotate_resid","title":"A Quick Start Guide on Using semptools","text":"Let us consider simple path analysis model: plot semPlot::semPaths().  Suppose want rotate residuals variables improve readability. x3, want place residual top-right corner. x4, want place residual top-left corner. x2, want place residual left. first need decide angle placement, degrees. Top 0 degree. Clockwise position positive, anticlockwise position negative. Therefore, top-right 45, top-left -45, left -90. use rotate_resid() post-process semPlot::semPaths() output. first argument, semPaths_plot, semPlot::semPaths() output. second argument, rotate_resid_list, vector specify residuals rotated. name node residual rotated, value degree rotation. example, achieve results described , vector c(x3 = 45, x4 = -45, x2 = -90):  (Note: function accepts named vectors since version 0.2.8. Lists named list still supported suggested. Please see ?rotate_resid use lists named list.)","code":"library(lavaan) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) library(semPlot) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) library(semptools) my_rotate_resid_list <- c(x3 =  45,                           x4 = -45,                           x2 = -90) p_pa3 <- rotate_resid(p_pa, my_rotate_resid_list) plot(p_pa3)"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"set-the-curve-attributes-of-selected-arrows-set_curve","dir":"Articles","previous_headings":"","what":"Set the curve attributes of selected arrows: set_curve","title":"A Quick Start Guide on Using semptools","text":"Let us consider simple path analysis model: plot semPaths.  Suppose want change curvature two arrows (edges): x1 ~~ x2 covariance curved “away” center. x4 ~ x1 path curved upward. use set_curve() post-process semPlot::semPaths() output. first argument, semPaths_plot, semPlot::semPaths() output. second argument, curve_list, list specify new curvature selected arrows. “name” element form lhs-op-rhs lavaan::lavaan() model syntax. lavaan, y ~ x denotes arrow x y. Therefore, want change curvature path x y -3, element \"y ~ x\" = -3. Note whether ~ ~~ used matter. achieve changes described , can use c(\"x2 ~~ x1\" = -3, \"x4  ~ x1\" = 2), shown :  Note meaning value depends variable field variable field. Therefore, \"x2 ~~ x1\" = -3 \"x1 ~~ x2\" = -3 two different changes. treat variable back variable front, positive number bends line left, negative number bends line right. easy decide value used set curve. Trial error needed complicated models. curve attributes corresponding arrows qgraph object updated. (Note: function accepts named vectors since version 0.2.8. Lists named list still supported suggested. Please see ?set_curve use lists named list.)","code":"library(lavaan) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) library(semPlot) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) my_curve_list <- c(\"x2 ~~ x1\" = -3,                    \"x4  ~ x1\" =  2) p_pa3 <- set_curve(p_pa, my_curve_list) plot(p_pa3)"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"set-the-positions-of-parameters-of-selected-arrows-set_edge_label_position","dir":"Articles","previous_headings":"","what":"Set the positions of parameters of selected arrows: set_edge_label_position","title":"A Quick Start Guide on Using semptools","text":"Let us consider simple path analysis model: plot semPlot::semPaths().  Suppose want move parameter estimates way: x4 ~ x1 path, move parameter estimates closer x4. x3 ~ x1 path, move parameter estimates closer x1. x3 ~ x2 path, move parameter estimates closer x2. can use set_edge_label_position() post-process semPlot::semPaths output. first argument, semPaths_plot, semPlot::semPaths() output. second argument, position_list, list specify new position selected arrows. can use named vector specify changes. “name” element form lhs-op-rhs lavaan::lavaan() model syntax. lavaan, y ~ x denotes arrow x y. Therefore, want change curvature path x y -3, element \"y ~ x\" = -3. Note whether ~ ~~ used matter. Therefore, changes described can specified c(\"x2 ~~ x1\" = -3, \"x4  ~ x1\" = 2), shown :  (Note: function accept named vectors since version 0.2.8. Lists named list still supported suggested. Please see ?set_edge_label_position use lists named list.)","code":"library(lavaan) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) library(semPlot) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) library(semptools) my_position_list <- c(\"x3 ~ x1\" = .25,                       \"x3 ~ x2\" = .25,                       \"x4 ~ x1\" = .75) p_pa3 <- set_edge_label_position(p_pa, my_position_list) plot(p_pa3)"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"change-one-or-more-node-labels-change_node_label","dir":"Articles","previous_headings":"","what":"Change one or more node labels: change_node_label","title":"A Quick Start Guide on Using semptools","text":"semPlot::semPaths() supports changing labels nodes generating plot argument nodeLabels. However, want use functions mark_sig() mark_se(), require information original results original lavaan output, use nodeLabels functions (yet) know map user-defined label variables lavaan output. One solution use semptools functions process qgraph generated semPlot::semPaths(), change node labels last step create final plot. can done change_node_label(). Let us consider simple path analysis model use marg_sig() add asterisks denote significant parameters:   Suppose want change x1, x2, x3, x4 Attitude, SbjNorm, Intention, Behavior, process graph, p_pa2 , change_node_label() :  second argument can named vector named list. name element original label (e.g., x1 example), value new label (e.g., \"Attitude\" x1). labels named nodes changed. Note usually also set label.cex argument, identical argument semPlot::semPaths() new labels might fit nodes.","code":"library(lavaan) library(semPlot) library(semptools) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) p_pa2 <- mark_sig(p_pa, fit_pa, alpha = c(\"(n.s.)\" = 1.00, \"*\" = .01)) plot(p_pa2) p_pa3 <- change_node_label(p_pa2,                            c(x1 = \"Attitude\",                              x2 = \"SbjNorm\",                              x3 = \"Intention\",                              x4 = \"Behavior\"),                            label.cex = 1.1) plot(p_pa3)"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"using-pipe-operator","dir":"Articles","previous_headings":"","what":"Using pipe-operator","title":"A Quick Start Guide on Using semptools","text":"functions support %>% operator magrittr native pipe operator |> available since R 4.1.x. Therefore, can chain post-processing. initial plot:  : Change curvature x1 ~~ x2 Rotate residuals x1, x2, x3, x4, Add asterisks denote significant test results Add standard errors Move parameter estimate x4 ~ x1 path closer x4.  functions, necessary argument beside semPlot::semPaths output, , second element. Therefore, can included unnamed arguments. third optional arguments, sep mark_se(), better name .","code":"library(lavaan) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) library(semPlot) m <- matrix(c(\"x1\",   NA,  NA,   NA,                 NA, \"x3\",  NA, \"x4\",               \"x2\",   NA,  NA,   NA), byrow = TRUE, 3, 4) p_pa <- semPaths(fit_pa, whatLabels = \"est\",            sizeMan = 10,            edge.label.cex = 1.15,            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m) my_position_list <- c(\"x4 ~ x1\" = .75) my_curve_list <- c(\"x2 ~ x1\" = -2) my_rotate_resid_list <- c(x1 = 0, x2 = 180, x3 = 140, x4 = 140) my_position_list <- c(\"x4 ~ x1\" = .65) # If R version 4.1.0 or above p_pa3 <- p_pa |> set_curve(my_curve_list) |>                   rotate_resid(my_rotate_resid_list) |>                   mark_sig(fit_pa) |>                   mark_se(fit_pa, sep = \"\\n\") |>                   set_edge_label_position(my_position_list) plot(p_pa3) #> Loading required package: magrittr"},{"path":"https://sfcheung.github.io/semptools/articles/semptools.html","id":"limitations","dir":"Articles","previous_headings":"","what":"Limitations","title":"A Quick Start Guide on Using semptools","text":"Currently, function needs SEM output, lavaan output supported.","code":""},{"path":"https://sfcheung.github.io/semptools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shu Fai Cheung. Author, maintainer. Mark Hok Chio Lai. Author.","code":""},{"path":"https://sfcheung.github.io/semptools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheung S, Lai M (2024). semptools: Customizing Structural Equation Modelling Plots. R package version 0.2.11.3, https://sfcheung.github.io/semptools/.","code":"@Manual{,   title = {semptools: Customizing Structural Equation Modelling Plots},   author = {Shu Fai Cheung and Mark Hok Chio Lai},   year = {2024},   note = {R package version 0.2.11.3},   url = {https://sfcheung.github.io/semptools/}, }"},{"path":"https://sfcheung.github.io/semptools/index.html","id":"semptools-","dir":"","previous_headings":"","what":"Customizing Structural Equation Modelling Plots","title":"Customizing Structural Equation Modelling Plots","text":"Helper functions modifying (postprocessing) plots generated semPlot::semPaths() semPlot package.","code":""},{"path":"https://sfcheung.github.io/semptools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Customizing Structural Equation Modelling Plots","text":"latest stable version can installed CRAN: latest development version GitHub can installed remotes::install_github(): read guides (vignettes) use functions, can build vignettes locally installing package: can also find guides Articles Github page package.","code":"install.packages(\"semptools\") remotes::install_github(\"sfcheung/semptools\") remotes::install_github(\"sfcheung/semptools\", build_vignettes = TRUE)"},{"path":"https://sfcheung.github.io/semptools/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Customizing Structural Equation Modelling Plots","text":"semPlot::semPaths() useful function visualizing structural equation models. use lot. output qgraph object highly customizable. area psychology users area may know customize graphs aspects relevant psychology. Therefore, think useful users psychology, including us, functions customizing graphs semPlot::semPaths(), without knowing technical details qgraph.","code":""},{"path":"https://sfcheung.github.io/semptools/index.html","id":"philosophy","dir":"","previous_headings":"","what":"Philosophy","title":"Customizing Structural Equation Modelling Plots","text":"think tasks usually want semPlot::semPaths() graph, write one function task. write functions work postprocessing semPlot::semPaths() graph: receive semPlot::semPaths() graph, modify , return modified semPlot::semPaths() graph. also allows users use %>% (pipe) operator magrittr package native pipe operator |> available since R 4.1.x chain together modifications. example: psychology, two typical models confirmatory factor analysis model structural models latent factors. Therefore, also wrote two functions, one model, can combine several common tasks together, specifying positions latent factors adjusting positions indicators. also write functions way users need know technical detail (e.g., position path list paths). example, user wants move path coefficient path x y closer y, user needs tell function path x y. function find path qgraph object.","code":"modified_graph <- original_graph %>%                     task_1() %>%                     task_2(other_arguments) %>%                     task_3()"},{"path":"https://sfcheung.github.io/semptools/index.html","id":"what-we-have-so-far","dir":"","previous_headings":"","what":"What we have so far","title":"Customizing Structural Equation Modelling Plots","text":"functions included far mark_se(): Add standard errors parameter estimates. mark_sig(): Add asterisks (“*”, “**”, “***”) based pp-values parameter estimates. rotate_resid(): Rotate residuals selected variables. set_curve(): Change curvature selected paths. set_edge_color(): Change colors selected paths. set_edge_attribute(): Change named attributes selected paths. set_edge_label_position(): Move parameter labels selected paths along paths. change_node_label(): Change labels nodes. set_node_attribute(): Change named attributes selected nodes. drop_nodes() keep_nodes(): Drop keeps nodes (e.g., drop control variables). set_cfa_layout(): function typical confirmatory factor analysis models. can used specifying orders indicators factors, specifying positions factors, setting curvatures interfactor covariances, set position loadings, setting orientation model (, left, , right). set_sem_layout(): function typical SEM models. can used specifying orders indicators factors, specifying positions factors using grid, specifying orientation factor’s indicators (, left, , right), fine tuning positions indicators selected factor, setting curvatures selected paths, specifying position selected loadings. See Get Started learn functions.","code":""},{"path":"https://sfcheung.github.io/semptools/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Customizing Structural Equation Modelling Plots","text":"package still development. bugs, limitations. Please post comments suggestions issues GitHub.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/add_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Fit Object to a 'qgraph' Object — add_object","title":"Add a Fit Object to a 'qgraph' Object — add_object","text":"Add fit object (e.g., 'lavaan' output) 'qgraph' object attribute.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/add_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Fit Object to a 'qgraph' Object — add_object","text":"","code":"add_object(semPaths_plot, object)"},{"path":"https://sfcheung.github.io/semptools/reference/add_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Fit Object to a 'qgraph' Object — add_object","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths(), similar qgraph::qgraph object modified semptools functions. object object, output lavaan::sem() lavaan::cfa(), used semPlot::semPaths() generate semPaths_plot. Note function check whether object appropriate way reliably.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/add_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Fit Object to a 'qgraph' Object — add_object","text":"original qgraph::qgraph object set semPaths_plot, attribute \"semptools_fit_object\" set object.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/add_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a Fit Object to a 'qgraph' Object — add_object","text":"adds object qgraph::qgraph object attribute \"semptools_fit_object\", retrieved functions need access original output used semPlot::semPaths() create diagram.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/reference/add_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Fit Object to a 'qgraph' Object — add_object","text":"","code":"library(lavaan) #> This is lavaan 0.6-19 #> lavaan is FREE software! Please report any bugs. library(semPlot)  mod <-   'f1 =~ x01 + x02 + x03 + x06    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10 + x03    f4 =~ x11 + x12 + x13 + x14   ' fit <- lavaan::cfa(mod, cfa_example) p <- semPaths(fit,               whatLabels = \"est\",               sizeMan = 3.25,               node.width = 1,               edge.label.cex = .75,               mar = c(10, 5, 10, 5),               DoNotPlot = TRUE) p <- add_object(p, fit) attr(p, \"semptools_fit_object\") #> lavaan 0.6-19 ended normally after 41 iterations #>  #>   Estimator                                         ML #>   Optimization method                           NLMINB #>   Number of model parameters                        36 #>  #>   Number of observations                           200 #>  #> Model Test User Model: #>                                                        #>   Test statistic                                75.495 #>   Degrees of freedom                                69 #>   P-value (Chi-square)                           0.277"},{"path":"https://sfcheung.github.io/semptools/reference/auto_factor_point_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","title":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","text":"Use named vector named arguments create matrix directions indicators factors.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/auto_factor_point_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","text":"","code":"auto_factor_point_to(factor_layout, ...)"},{"path":"https://sfcheung.github.io/semptools/reference/auto_factor_point_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","text":"factor_layout Argument description. ... Additional arguments. first argument named, named vector directions, names names factors, directions can one values: \"\", \"\", \"left\", \"right\". arguments ignored. arguments named, names arguments names factors, argument values direction factors.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/auto_factor_point_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","text":"character matrix dimension factor_layout. cells factor names replaced directions place indicators.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/auto_factor_point_to.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","text":"helper function make easier create matrix used set_sem_layout() indicate indicators factor positioned. works two modes. first argument named vector, c(f1 = \"\", f2 = \"\"), vector used create direction matrix. arguments named, auto_factor_point_to(factor_layout, f1 = \"\", f2 = \"\", names treated factor names, values arguments treated directions. matrix created can used argument factor_point_to set_sem_layout().","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/reference/auto_factor_point_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Matrix for 'factor_point_to' — auto_factor_point_to","text":"","code":"factor_layout <- matrix(c(\"f1\",   NA,   NA,                             NA, \"f3\", \"f4\",                           \"f2\",   NA,   NA), byrow = TRUE, 3, 3) factor_point_to <- auto_factor_point_to(factor_layout,                                         f1 = \"left\",                                         f2 = \"left\",                                         f3 = \"down\",                                         f4 = \"down\") factor_point_to #>      [,1]   [,2]   [,3]   #> [1,] \"left\" NA     NA     #> [2,] NA     \"down\" \"down\" #> [3,] \"left\" NA     NA"},{"path":"https://sfcheung.github.io/semptools/reference/auto_indicator_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the Order of Indicators Automatically — auto_indicator_order","title":"Determine the Order of Indicators Automatically — auto_indicator_order","text":"Determine order indicators match indicators factors based plot 'qgraph' object.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/auto_indicator_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the Order of Indicators Automatically — auto_indicator_order","text":"","code":"auto_indicator_order(semPaths_plot, add_isolated_manifest = FALSE)"},{"path":"https://sfcheung.github.io/semptools/reference/auto_indicator_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the Order of Indicators Automatically — auto_indicator_order","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths(), similar qgraph::qgraph object modified semptools functions. add_isolated_manifest Logical. Whether observed variables indicators included output \"factors\", one indicator (observed variable).","code":""},{"path":"https://sfcheung.github.io/semptools/reference/auto_indicator_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the Order of Indicators Automatically — auto_indicator_order","text":"named character vector. values indicators identified. names latent factors indicators loaded .","code":""},{"path":"https://sfcheung.github.io/semptools/reference/auto_indicator_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the Order of Indicators Automatically — auto_indicator_order","text":"inspects qgraph::qgraph object find variables indicators latent factors. output can used argument indicator_order set_cfa_layout() set_sem_layout(). can also modified, reordered, necessary. generated order used, need call function manually set_cfa_layout() set_sem_layout() automatically call function, indicator_order set. assumes observed variables represented squares (shape set \"square\") latent variables represented circles ovals (shape set \"circle\"). observed variable considered indicator arrow pointing latent variable. indicator loaded one latent variable, matched one , determined order appearance internal storage. uses node names, node labels, generating output.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/reference/auto_indicator_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the Order of Indicators Automatically — auto_indicator_order","text":"","code":"library(lavaan) library(semPlot)  mod <-   'f1 =~ x01 + x02 + x03 + x06    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10 + x03    f4 =~ x11 + x12 + x13 + x14   ' fit <- lavaan::cfa(mod, cfa_example) p <- semPaths(fit,               whatLabels = \"est\",               sizeMan = 3.25,               node.width = 1,               edge.label.cex = .75,               mar = c(10, 5, 10, 5),               DoNotPlot = TRUE) indicator_order <- auto_indicator_order(p) indicator_order #>    f1    f1    f1    f1    f2    f2    f2    f3    f3    f3    f4    f4    f4  #> \"x01\" \"x02\" \"x03\" \"x06\" \"x04\" \"x05\" \"x07\" \"x08\" \"x09\" \"x10\" \"x11\" \"x12\" \"x13\"  #>    f4  #> \"x14\"  p2 <- set_cfa_layout(p,                      indicator_order = indicator_order) plot(p2)   # set_cfa_layout() will call auto_indicator_order() # automatically if indicator_order is not set. p3 <- set_cfa_layout(p) plot(p3)"},{"path":"https://sfcheung.github.io/semptools/reference/cfa_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dataset pa_example — cfa_example","title":"Sample dataset pa_example — cfa_example","text":"sample dataset fitting confirmatory factor analysis model.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/cfa_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dataset pa_example — cfa_example","text":"","code":"cfa_example"},{"path":"https://sfcheung.github.io/semptools/reference/cfa_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample dataset pa_example — cfa_example","text":"object class data.frame 200 rows 14 columns.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/cfa_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample dataset pa_example — cfa_example","text":"Fourteen variables (x01 x14), 200 cases. Sample model fit (lavaan::model.syntax notation)","code":"mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14  '"},{"path":"https://sfcheung.github.io/semptools/reference/change_node_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Change node labels — change_node_label","title":"Change node labels — change_node_label","text":"Change labels selected nodes.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/change_node_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change node labels — change_node_label","text":"","code":"change_node_label(   semPaths_plot,   label_list = NULL,   label.cex,   label.scale,   label.prop,   label.norm )"},{"path":"https://sfcheung.github.io/semptools/reference/change_node_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change node labels — change_node_label","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. label_list list named lists. named list two named values: node . first part, node, character denoting label changed. appeared qgraph. second part, , new label. Expression can used . named vector can also used, names nodes changed, values new labels. label.cex Identical argument semPlot::semPaths(). number tha control size labels nodes. default. set, option semPaths_plot changed. label.scale Identical argument semPlot::semPaths. logical value determine whether labels wil scaled (resized) nodes attach . default. set, option semPaths_plot changed. label.prop Identical argument semPlot::semPaths. numeric vector length equal number nodes. label.scale TRUE, number proportion width node label scaled (resized) . default. set, option semPaths_plot changed. label.norm Identical argument semPlot::semPaths. must string. labels wide narrower string font size, labels wider string rescaled width string. default. set, option semPaths_plot changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/change_node_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change node labels — change_node_label","text":"qgraph::qgraph based original one, node attributes selected nodes modified.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/change_node_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change node labels — change_node_label","text":"Modify qgraph::qgraph object generated semPlot::semPaths change labels selected nodes.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/change_node_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change node labels — change_node_label","text":"","code":"library(semPlot) library(lavaan) mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- sem(mod_pa, pa_example) parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPaths(fit_pa, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m)   my_label_list <- list(list(node = \"x3\", to = \"mediator\"),                      list(node = \"x4\", to = expression(gamma)))  p_pa2 <- change_node_label(p_pa, my_label_list) plot(p_pa2)"},{"path":"https://sfcheung.github.io/semptools/reference/is_dv_residvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify dependent Variable residual variance — is_dv_residvar","title":"Identify dependent Variable residual variance — is_dv_residvar","text":"Check parameters lavaan output residual variance dependent variable.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/is_dv_residvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify dependent Variable residual variance — is_dv_residvar","text":"","code":"is_dv_residvar(lavaan_out)"},{"path":"https://sfcheung.github.io/semptools/reference/is_dv_residvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify dependent Variable residual variance — is_dv_residvar","text":"lavaan_out lavaan::lavaan object.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/is_dv_residvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify dependent Variable residual variance — is_dv_residvar","text":"boolean vector length equal number rows lavaan output.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/is_dv_residvar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify dependent Variable residual variance — is_dv_residvar","text":"Check parameters lavaan output variance dependent variable. Indicators latent variable excluded.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/is_dv_residvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify dependent Variable residual variance — is_dv_residvar","text":"","code":"mod <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod, pa_example) is_dv_residvar(fit_pa) #> x1 ~~ x2  x3 ~ x1  x3 ~ x2  x4 ~ x1  x4 ~ x3 x3 ~~ x3 x4 ~~ x4 x1 ~~ x1  #>    FALSE    FALSE    FALSE    FALSE    FALSE     TRUE     TRUE    FALSE  #> x2 ~~ x2  #>    FALSE   mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14  ' fit_cfa <- lavaan::cfa(mod, cfa_example) is_dv_residvar(fit_cfa) #>  f1 =~ x01  f1 =~ x02  f1 =~ x03  f2 =~ x04  f2 =~ x05  f2 =~ x06  f2 =~ x07  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #>  f3 =~ x08  f3 =~ x09  f3 =~ x10  f4 =~ x11  f4 =~ x12  f4 =~ x13  f4 =~ x14  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #> x01 ~~ x01 x02 ~~ x02 x03 ~~ x03 x04 ~~ x04 x05 ~~ x05 x06 ~~ x06 x07 ~~ x07  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #> x08 ~~ x08 x09 ~~ x09 x10 ~~ x10 x11 ~~ x11 x12 ~~ x12 x13 ~~ x13 x14 ~~ x14  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #>   f1 ~~ f1   f2 ~~ f2   f3 ~~ f3   f4 ~~ f4   f1 ~~ f2   f1 ~~ f3   f1 ~~ f4  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #>   f2 ~~ f3   f2 ~~ f4   f3 ~~ f4  #>      FALSE      FALSE      FALSE   mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14   f3 ~  f1 + f2   f4 ~  f1 + f3  ' fit_sem <- lavaan::sem(mod, sem_example) is_dv_residvar(fit_sem) #>  f1 =~ x01  f1 =~ x02  f1 =~ x03  f2 =~ x04  f2 =~ x05  f2 =~ x06  f2 =~ x07  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #>  f3 =~ x08  f3 =~ x09  f3 =~ x10  f4 =~ x11  f4 =~ x12  f4 =~ x13  f4 =~ x14  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #>    f3 ~ f1    f3 ~ f2    f4 ~ f1    f4 ~ f3 x01 ~~ x01 x02 ~~ x02 x03 ~~ x03  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #> x04 ~~ x04 x05 ~~ x05 x06 ~~ x06 x07 ~~ x07 x08 ~~ x08 x09 ~~ x09 x10 ~~ x10  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE  #> x11 ~~ x11 x12 ~~ x12 x13 ~~ x13 x14 ~~ x14   f1 ~~ f1   f2 ~~ f2   f3 ~~ f3  #>      FALSE      FALSE      FALSE      FALSE      FALSE      FALSE       TRUE  #>   f4 ~~ f4   f1 ~~ f2  #>       TRUE      FALSE"},{"path":"https://sfcheung.github.io/semptools/reference/keep_drop_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep or drop nodes — keep_drop_nodes","title":"Keep or drop nodes — keep_drop_nodes","text":"Keep drop nodes semPlotModel object.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/keep_drop_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep or drop nodes — keep_drop_nodes","text":"","code":"drop_nodes(object, nodes)  keep_nodes(object, nodes)"},{"path":"https://sfcheung.github.io/semptools/reference/keep_drop_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep or drop nodes — keep_drop_nodes","text":"object semPlot::semPlotModel generated semPlot::semPlotModel(). nodes character vector nodes kept removed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/keep_drop_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep or drop nodes — keep_drop_nodes","text":"object class semPlot::semPlotModel.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/keep_drop_nodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Keep or drop nodes — keep_drop_nodes","text":"functions can used edit nodes semPlot::semPlotModel generated semPlot::semPlotModel(). edited object can passed semPlot::semPaths() generate path diagram. Use keep_nodes() specify nodes kept. nodes removed. Use drop_nodes() specify nodes dropped. nodes kept.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/keep_drop_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep or drop nodes — keep_drop_nodes","text":"","code":"mod_pa <-   'x1 ~~ x2    x3 ~  x1 + x2    x4 ~  x1 + x3   ' fit_pa <- lavaan::sem(mod_pa, pa_example) m <- matrix(c(\"x1\",   NA,   NA,              NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) pm_pa <- semPlot::semPlotModel(fit_pa) semPlot::semPaths(pm_pa, whatLabels = \"est\",                  style = \"ram\",                  nCharNodes = 0, nCharEdges = 0,                  layout = m)  pm_pa2 <- drop_nodes(pm_pa, c(\"x3\")) semPlot::semPaths(pm_pa2, whatLabels = \"est\",                  style = \"ram\",                  nCharNodes = 0, nCharEdges = 0,                  layout = m)  pm_pa3 <- keep_nodes(pm_pa, c(\"x1\", \"x3\", \"x4\")) semPlot::semPaths(pm_pa3, whatLabels = \"est\",                  style = \"ram\",                  nCharNodes = 0, nCharEdges = 0,                  layout = m)"},{"path":"https://sfcheung.github.io/semptools/reference/lavaan_indicator_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","title":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","text":"Determine order indicators match indicators factors based 'lavaan' model syntax.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/lavaan_indicator_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","text":"","code":"lavaan_indicator_order(model_syntax)"},{"path":"https://sfcheung.github.io/semptools/reference/lavaan_indicator_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","text":"model_syntax string model specified lavaan model syntax. factor structure (operator =~) model used.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/lavaan_indicator_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","text":"named character vector. values indicators model syntax. names latent factors indicators loaded .","code":""},{"path":"https://sfcheung.github.io/semptools/reference/lavaan_indicator_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","text":"generates named vector argument indicator_order set_cfa_layout() set_sem_layout() using lavaan model syntax. variable considered indicator right-hand side operator =~. indicator loaded one latent variable, matched one , determined order appearance internal storage.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/reference/lavaan_indicator_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the Order of Indicators Using a 'lavaan' Model Syntax — lavaan_indicator_order","text":"","code":"mod <-   'f1 =~ x01 + x02 + x03 + x06    f4 =~ x11 + x12 + x13 + x14    f2 =~ x04 + x05 + x06 + x07    f3 =~ x08 + x09 + x10 + x03   ' lavaan_indicator_order(mod) #>    f1    f1    f1    f1    f4    f4    f4    f4    f2    f2    f2    f3    f3  #> \"x01\" \"x02\" \"x03\" \"x06\" \"x11\" \"x12\" \"x13\" \"x14\" \"x04\" \"x05\" \"x07\" \"x08\" \"x09\"  #>    f3  #> \"x10\"   mod <-   'f1 =~ x01 + x02 + x03 + x06    f3 =~ x08 + x09 + x10 + x03    f2 =~ x04 + x05 + x06 + x07    f4 =~ x11 + x12 + x13 + x14    f3 ~ f1 + f2    f4 ~ f3   ' lavaan_indicator_order(mod) #>    f1    f1    f1    f1    f3    f3    f3    f2    f2    f2    f4    f4    f4  #> \"x01\" \"x02\" \"x03\" \"x06\" \"x08\" \"x09\" \"x10\" \"x04\" \"x05\" \"x07\" \"x11\" \"x12\" \"x13\"  #>    f4  #> \"x14\""},{"path":"https://sfcheung.github.io/semptools/reference/layout_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the layout matrix for semPaths — layout_matrix","title":"Create the layout matrix for semPaths — layout_matrix","text":"Create layout matrix list coordinates semPaths.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/layout_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the layout matrix for semPaths — layout_matrix","text":"","code":"layout_matrix(...)"},{"path":"https://sfcheung.github.io/semptools/reference/layout_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the layout matrix for semPaths — layout_matrix","text":"... node matrix specified form: name = c(x, y). name node label, vector position node. first element x position, second element y position, measured top left corner. size grid determined automatically. grid n rows m columns, top left cell specified c(1, 1), bottom right cell specified c(n, m).","code":""},{"path":"https://sfcheung.github.io/semptools/reference/layout_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the layout matrix for semPaths — layout_matrix","text":"layout matrix layout argument semPlot::semPaths().","code":""},{"path":"https://sfcheung.github.io/semptools/reference/layout_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the layout matrix for semPaths — layout_matrix","text":"layout argument semPlot::semPaths() accepts matrix node labels elements, NA empty cells. function allows user create matrix using list coordinates node labels.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/layout_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the layout matrix for semPaths — layout_matrix","text":"","code":"# Suppose this is the layout to be created: m0 <- matrix(c(\"x1\", NA, NA, NA,               \"x2\", \"x3\", NA, NA,                NA,  \"x4\", NA, \"x5\"), byrow = TRUE, 3, 4) # This call will create the same matrix. m1 <- layout_matrix(x1 = c(1, 1),                    x2 = c(2, 1),                    x3 = c(2, 2),                    x4 = c(3, 2),                    x5 = c(3, 4)) #The two matrices should be identical. m0 == m1 #>      [,1] [,2] [,3] [,4] #> [1,] TRUE   NA   NA   NA #> [2,] TRUE TRUE   NA   NA #> [3,]   NA TRUE   NA TRUE"},{"path":"https://sfcheung.github.io/semptools/reference/mark_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","title":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","text":"Add standard error estimates, parentheses, parameter estimates (edge labels) qgraph::qgraph object.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","text":"","code":"mark_se(   semPaths_plot,   object,   sep = \" \",   digits = 2L,   ests = NULL,   std_type = FALSE )"},{"path":"https://sfcheung.github.io/semptools/reference/mark_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","text":"semPaths_plot qgraph object generated semPaths, similar qgraph object modified semptools functions. object object used semPaths generate plot. Use argument name used semPaths make meaning argument obvious. Currently object class lavaan supported. sep character string separate coefficient standard error (parentheses). Default \" \" (one space). Use \"\\n\" enforce line break. digits Integer indicating number decimal places appended standard errors. Default 2L. ests data.frame parameterEstimates function, function columns:? lhs, op, rhs, se. used object specified. std_type standardized solution used plot, set either type standardization (e.g., \"std.\") TRUE. passed lavaan::standardizedSolution() compute standard errors standardized solution. Used standard errors supplied directly ests.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","text":"input qgraph::qgraph object, function returns qgraph based original one, standard error estimates appended. input list qgraph objects, function returns list length.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","text":"Modify qgraph::qgraph object generated semPaths (currently parentheses) labels. Require either original object used semPaths call, data frame standard error parameter. latter option standard errors computed lavaan functions. Currently supports plots based lavaan output. function variant , can combined ,  mark_sig function.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Standard Error Estimates to Parameter Estimates (Edge Labels) — mark_se","text":"","code":"mod_pa <-   'x1 ~~ x2    x3 ~  x1 + x2    x4 ~  x1 + x3   ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[ , c(\"lhs\", \"op\", \"rhs\",                                        \"est\", \"pvalue\", \"se\")] #>   lhs op rhs   est pvalue    se #> 1  x1 ~~  x2 0.005  0.957 0.097 #> 2  x3  ~  x1 0.537  0.000 0.097 #> 3  x3  ~  x2 0.376  0.000 0.093 #> 4  x4  ~  x1 0.111  0.382 0.127 #> 5  x4  ~  x3 0.629  0.000 0.108 #> 6  x3 ~~  x3 0.874  0.000 0.124 #> 7  x4 ~~  x4 1.194  0.000 0.169 #> 8  x1 ~~  x1 0.933  0.000 0.132 #> 9  x2 ~~  x2 1.017  0.000 0.144 m <- matrix(c(\"x1\",   NA,   NA,                NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels = \"est\",                          style = \"ram\",                          nCharNodes = 0, nCharEdges = 0,                          layout = m)  p_pa2 <- mark_se(p_pa, fit_pa) plot(p_pa2)   mod_cfa <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14  ' fit_cfa <- lavaan::sem(mod_cfa, cfa_example) lavaan::parameterEstimates(fit_cfa)[ , c(\"lhs\", \"op\", \"rhs\",                                         \"est\", \"pvalue\", \"se\")] #>    lhs op rhs    est pvalue    se #> 1   f1 =~ x01  1.000     NA 0.000 #> 2   f1 =~ x02  1.097  0.000 0.137 #> 3   f1 =~ x03  1.247  0.000 0.154 #> 4   f2 =~ x04  1.000     NA 0.000 #> 5   f2 =~ x05 -0.040  0.587 0.073 #> 6   f2 =~ x06  1.098  0.000 0.132 #> 7   f2 =~ x07  0.771  0.000 0.099 #> 8   f3 =~ x08  1.000     NA 0.000 #> 9   f3 =~ x09  0.937  0.000 0.148 #> 10  f3 =~ x10  1.785  0.000 0.262 #> 11  f4 =~ x11  1.000     NA 0.000 #> 12  f4 =~ x12  0.949  0.000 0.134 #> 13  f4 =~ x13 -0.077  0.356 0.083 #> 14  f4 =~ x14  1.184  0.000 0.161 #> 15 x01 ~~ x01  0.969  0.000 0.129 #> 16 x02 ~~ x02  0.853  0.000 0.130 #> 17 x03 ~~ x03  0.976  0.000 0.159 #> 18 x04 ~~ x04  0.725  0.000 0.130 #> 19 x05 ~~ x05  0.954  0.000 0.095 #> 20 x06 ~~ x06  1.161  0.000 0.176 #> 21 x07 ~~ x07  0.903  0.000 0.114 #> 22 x08 ~~ x08  1.026  0.000 0.125 #> 23 x09 ~~ x09  1.119  0.000 0.129 #> 24 x10 ~~ x10  0.566  0.009 0.218 #> 25 x11 ~~ x11  1.231  0.000 0.163 #> 26 x12 ~~ x12  1.032  0.000 0.141 #> 27 x13 ~~ x13  0.990  0.000 0.099 #> 28 x14 ~~ x14  0.985  0.000 0.172 #> 29  f1 ~~  f1  0.855  0.000 0.176 #> 30  f2 ~~  f2  1.119  0.000 0.201 #> 31  f3 ~~  f3  0.585  0.000 0.143 #> 32  f4 ~~  f4  0.943  0.000 0.209 #> 33  f1 ~~  f2 -0.173  0.059 0.092 #> 34  f1 ~~  f3  0.387  0.000 0.089 #> 35  f1 ~~  f4 -0.178  0.041 0.087 #> 36  f2 ~~  f3 -0.112  0.132 0.074 #> 37  f2 ~~  f4  0.593  0.000 0.122 #> 38  f3 ~~  f4 -0.181  0.014 0.074 p_cfa <- semPlot::semPaths(fit_cfa, whatLabels = \"est\",                           style = \"ram\",                           nCharNodes = 0, nCharEdges = 0)  # Place standard errors on a new line p_cfa2 <- mark_se(p_cfa, fit_cfa, sep = \"\\n\") plot(p_cfa2)   mod_sem <- 'f1 =~ x01 + x02 + x03  f2 =~ x04 + x05 + x06 + x07  f3 =~ x08 + x09 + x10  f4 =~ x11 + x12 + x13 + x14  f3 ~  f1 + f2  f4 ~  f1 + f3 ' fit_sem <- lavaan::sem(mod_sem, sem_example) lavaan::parameterEstimates(fit_sem)[ , c(\"lhs\", \"op\", \"rhs\",                                         \"est\", \"pvalue\", \"se\")] #>    lhs op rhs    est pvalue    se #> 1   f1 =~ x01  1.000     NA 0.000 #> 2   f1 =~ x02  1.124  0.000 0.166 #> 3   f1 =~ x03  1.310  0.000 0.191 #> 4   f2 =~ x04  1.000     NA 0.000 #> 5   f2 =~ x05  0.079  0.205 0.062 #> 6   f2 =~ x06  1.120  0.000 0.121 #> 7   f2 =~ x07  0.736  0.000 0.093 #> 8   f3 =~ x08  1.000     NA 0.000 #> 9   f3 =~ x09  0.819  0.000 0.084 #> 10  f3 =~ x10  1.230  0.000 0.112 #> 11  f4 =~ x11  1.000     NA 0.000 #> 12  f4 =~ x12  0.773  0.000 0.068 #> 13  f4 =~ x13  0.064  0.160 0.046 #> 14  f4 =~ x14  0.928  0.000 0.073 #> 15  f3  ~  f1  0.612  0.000 0.131 #> 16  f3  ~  f2  0.584  0.000 0.093 #> 17  f4  ~  f1 -0.542  0.001 0.170 #> 18  f4  ~  f3  0.980  0.000 0.127 #> 19 x01 ~~ x01  1.055  0.000 0.138 #> 20 x02 ~~ x02  1.015  0.000 0.149 #> 21 x03 ~~ x03  1.028  0.000 0.178 #> 22 x04 ~~ x04  0.933  0.000 0.144 #> 23 x05 ~~ x05  0.795  0.000 0.080 #> 24 x06 ~~ x06  0.771  0.000 0.156 #> 25 x07 ~~ x07  1.071  0.000 0.126 #> 26 x08 ~~ x08  0.976  0.000 0.134 #> 27 x09 ~~ x09  0.937  0.000 0.115 #> 28 x10 ~~ x10  1.164  0.000 0.177 #> 29 x11 ~~ x11  1.008  0.000 0.161 #> 30 x12 ~~ x12  1.033  0.000 0.131 #> 31 x13 ~~ x13  0.846  0.000 0.085 #> 32 x14 ~~ x14  0.807  0.000 0.135 #> 33  f1 ~~  f1  0.714  0.000 0.168 #> 34  f2 ~~  f2  1.277  0.000 0.229 #> 35  f3 ~~  f3  0.759  0.000 0.151 #> 36  f4 ~~  f4  1.188  0.000 0.221 #> 37  f1 ~~  f2  0.016  0.856 0.088 p_sem <- semPlot::semPaths(fit_sem, whatLabels = \"est\",                           style = \"ram\",                           nCharNodes = 0, nCharEdges = 0)  # Mark significance, and then add standard errors p_sem2 <- mark_sig(p_sem, fit_sem) p_sem3 <- mark_se(p_sem2, fit_sem, sep = \"\\n\") plot(p_sem3)"},{"path":"https://sfcheung.github.io/semptools/reference/mark_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","title":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","text":"Mark parameter estimates (edge labels) based p-value.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","text":"","code":"mark_sig(   semPaths_plot,   object,   alphas = c(`*` = 0.05, `**` = 0.01, `***` = 0.001),   ests = NULL,   std_type = FALSE )"},{"path":"https://sfcheung.github.io/semptools/reference/mark_sig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","text":"semPaths_plot qgraph::qgraph object generated semPaths, similar qgraph object modified semptools functions. object object used semPaths generate plot. Use argument name used semPaths make meaning argument obvious. Currently object class lavaan supported. alphas named numeric vector. element cutoff (level significance), name symbol used p-value less cutoff. default c(\"\" = .05, \"\" = .01, \"\" = .001). ests data.frame parameterEstimates function, function columns:? lhs, op, rhs, pvalue. used object specified. std_type standardized solution used plot, set either type standardization (e.g., \"std.\") TRUE. passed lavaan::standardizedSolution() compute standard errors standardized solution. Used standard errors supplied directly ests.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_sig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","text":"qgraph::qgraph based original one, marks appended edge labels based p-values.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_sig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","text":"Modify qgraph::qgraph object generated semPaths add marks (currently asterisk, \"*\") labels based p-values. Require either original object used semPaths call, data frame p-values parameter. latter option p-values computed lavaan functions. Currently supports plots based lavaan output.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/mark_sig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark Parameter Estimates (Edge Labels) Based on p-Value — mark_sig","text":"","code":"mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m)  p_pa2 <- mark_sig(p_pa, fit_pa) plot(p_pa2)   mod_cfa <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14  ' fit_cfa <- lavaan::sem(mod_cfa, cfa_example) lavaan::parameterEstimates(fit_cfa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>    lhs op rhs    est pvalue #> 1   f1 =~ x01  1.000     NA #> 2   f1 =~ x02  1.097  0.000 #> 3   f1 =~ x03  1.247  0.000 #> 4   f2 =~ x04  1.000     NA #> 5   f2 =~ x05 -0.040  0.587 #> 6   f2 =~ x06  1.098  0.000 #> 7   f2 =~ x07  0.771  0.000 #> 8   f3 =~ x08  1.000     NA #> 9   f3 =~ x09  0.937  0.000 #> 10  f3 =~ x10  1.785  0.000 #> 11  f4 =~ x11  1.000     NA #> 12  f4 =~ x12  0.949  0.000 #> 13  f4 =~ x13 -0.077  0.356 #> 14  f4 =~ x14  1.184  0.000 #> 15 x01 ~~ x01  0.969  0.000 #> 16 x02 ~~ x02  0.853  0.000 #> 17 x03 ~~ x03  0.976  0.000 #> 18 x04 ~~ x04  0.725  0.000 #> 19 x05 ~~ x05  0.954  0.000 #> 20 x06 ~~ x06  1.161  0.000 #> 21 x07 ~~ x07  0.903  0.000 #> 22 x08 ~~ x08  1.026  0.000 #> 23 x09 ~~ x09  1.119  0.000 #> 24 x10 ~~ x10  0.566  0.009 #> 25 x11 ~~ x11  1.231  0.000 #> 26 x12 ~~ x12  1.032  0.000 #> 27 x13 ~~ x13  0.990  0.000 #> 28 x14 ~~ x14  0.985  0.000 #> 29  f1 ~~  f1  0.855  0.000 #> 30  f2 ~~  f2  1.119  0.000 #> 31  f3 ~~  f3  0.585  0.000 #> 32  f4 ~~  f4  0.943  0.000 #> 33  f1 ~~  f2 -0.173  0.059 #> 34  f1 ~~  f3  0.387  0.000 #> 35  f1 ~~  f4 -0.178  0.041 #> 36  f2 ~~  f3 -0.112  0.132 #> 37  f2 ~~  f4  0.593  0.000 #> 38  f3 ~~  f4 -0.181  0.014 p_cfa <- semPlot::semPaths(fit_cfa, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0)  p_cfa2 <- mark_sig(p_cfa, fit_cfa) plot(p_cfa2)   mod_sem <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14   f3 ~  f1 + f2   f4 ~  f1 + f3  ' fit_sem <- lavaan::sem(mod_sem, sem_example) lavaan::parameterEstimates(fit_sem)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>    lhs op rhs    est pvalue #> 1   f1 =~ x01  1.000     NA #> 2   f1 =~ x02  1.124  0.000 #> 3   f1 =~ x03  1.310  0.000 #> 4   f2 =~ x04  1.000     NA #> 5   f2 =~ x05  0.079  0.205 #> 6   f2 =~ x06  1.120  0.000 #> 7   f2 =~ x07  0.736  0.000 #> 8   f3 =~ x08  1.000     NA #> 9   f3 =~ x09  0.819  0.000 #> 10  f3 =~ x10  1.230  0.000 #> 11  f4 =~ x11  1.000     NA #> 12  f4 =~ x12  0.773  0.000 #> 13  f4 =~ x13  0.064  0.160 #> 14  f4 =~ x14  0.928  0.000 #> 15  f3  ~  f1  0.612  0.000 #> 16  f3  ~  f2  0.584  0.000 #> 17  f4  ~  f1 -0.542  0.001 #> 18  f4  ~  f3  0.980  0.000 #> 19 x01 ~~ x01  1.055  0.000 #> 20 x02 ~~ x02  1.015  0.000 #> 21 x03 ~~ x03  1.028  0.000 #> 22 x04 ~~ x04  0.933  0.000 #> 23 x05 ~~ x05  0.795  0.000 #> 24 x06 ~~ x06  0.771  0.000 #> 25 x07 ~~ x07  1.071  0.000 #> 26 x08 ~~ x08  0.976  0.000 #> 27 x09 ~~ x09  0.937  0.000 #> 28 x10 ~~ x10  1.164  0.000 #> 29 x11 ~~ x11  1.008  0.000 #> 30 x12 ~~ x12  1.033  0.000 #> 31 x13 ~~ x13  0.846  0.000 #> 32 x14 ~~ x14  0.807  0.000 #> 33  f1 ~~  f1  0.714  0.000 #> 34  f2 ~~  f2  1.277  0.000 #> 35  f3 ~~  f3  0.759  0.000 #> 36  f4 ~~  f4  1.188  0.000 #> 37  f1 ~~  f2  0.016  0.856 p_sem <- semPlot::semPaths(fit_sem, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0)  p_sem2 <- mark_sig(p_sem, fit_sem) plot(p_sem2)"},{"path":"https://sfcheung.github.io/semptools/reference/pa_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dataset pa_example — pa_example","title":"Sample dataset pa_example — pa_example","text":"sample dataset fitting path analysis model.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/pa_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dataset pa_example — pa_example","text":"","code":"pa_example"},{"path":"https://sfcheung.github.io/semptools/reference/pa_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample dataset pa_example — pa_example","text":"object class data.frame 100 rows 4 columns.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/pa_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample dataset pa_example — pa_example","text":"Four variables (x1 x4), 100 cases. Sample model fit (lavaan::model.syntax notation)","code":"mod <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  '"},{"path":"https://sfcheung.github.io/semptools/reference/pa_example_3covs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dataset pa_example_3covs — pa_example_3covs","title":"Sample dataset pa_example_3covs — pa_example_3covs","text":"sample dataset fitting path analysis model, three control variables.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/pa_example_3covs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dataset pa_example_3covs — pa_example_3covs","text":"","code":"pa_example_3covs"},{"path":"https://sfcheung.github.io/semptools/reference/pa_example_3covs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample dataset pa_example_3covs — pa_example_3covs","text":"object class data.frame 100 rows 7 columns.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/pa_example_3covs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample dataset pa_example_3covs — pa_example_3covs","text":"Four variables (x1 x4), three control variables (cov1, cov2, cov3), 100 cases. Sample model fit (lavaan::model.syntax notation)","code":"mod <- ' x3 ~  x1 + x2 + cov1 +cov2 + cov3 x4 ~  x1 + x3 + cov1 +cov2 + cov3 '"},{"path":"https://sfcheung.github.io/semptools/reference/rescale_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale the Layout — rescale_layout","title":"Rescale the Layout — rescale_layout","text":"Rescale layout qgraph object, output semptools functions modify output semPlot::semPaths().","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rescale_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale the Layout — rescale_layout","text":"","code":"rescale_layout(semPaths_plot, x_min = -1, x_max = 1, y_min = -1, y_max = 1)"},{"path":"https://sfcheung.github.io/semptools/reference/rescale_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale the Layout — rescale_layout","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths(), similar qgraph object modified semptools functions. x_min, x_max, y_min, y_max ranges x-coordinates y-coordinates rescaling. Default -1 x_min y_min, 1 x_max y_max. Change enlarge shrink plot.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rescale_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale the Layout — rescale_layout","text":"qgraph::qgraph based original one, layout matrix rescaled.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rescale_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rescale the Layout — rescale_layout","text":"plot generated functions, set_sem_layout(), may area underused model. function rescale layout matrix, just like rescale argument semPlot::semPaths() .","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rescale_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale the Layout — rescale_layout","text":"","code":"library(lavaan) library(semPlot) mod <-   'f1 =~ x01 + x02 + x03    f3 =~ x08 + x09 + x10    f4 =~ x11 + x12 + x13 + x14    f3 ~ f1 + x04    f4 ~ f3 + x05' fit_sem <- sem(mod, sem_example) p <- semPaths(fit_sem, whatLabels=\"est\",               sizeMan = 5,               nCharNodes = 0,               nCharEdges = 0,               edge.width = 0.8,               node.width = 0.7,               edge.label.cex = 0.6,               mar = c(10, 10, 10, 10),               DoNotPlot = TRUE) plot(p)   indicator_order  <- c(\"x04\", \"x05\", \"x01\", \"x02\", \"x03\",                       \"x11\", \"x12\", \"x13\", \"x14\", \"x08\", \"x09\", \"x10\") indicator_factor <- c(\"x04\", \"x05\", \"f1\",  \"f1\",  \"f1\",                       \"f4\",  \"f4\",  \"f4\",  \"f4\",  \"f3\",  \"f3\",  \"f3\") factor_layout <- matrix(c( \"f1\",  \"f3\", \"f4\",                           \"x04\", \"x05\",  NA), byrow = TRUE, 2, 3) factor_point_to <- matrix(c(\"left\", \"up\", \"right\",                                 NA,   NA,      NA), byrow = TRUE, 2, 3) p2 <- set_sem_layout(p,                     indicator_order = indicator_order,                     indicator_factor = indicator_factor,                     factor_layout = factor_layout,                     factor_point_to = factor_point_to) # The original plot with too much unused area plot(p2) rect(-1, -1, 1, 1) rect(-1.5, -1.5, 1.5, 1.5)   # Expand the plot p3 <- p2 p3 <- rescale_layout(p3)  plot(p3) rect(-1, -1, 1, 1) rect(-1.5, -1.5, 1.5, 1.5)"},{"path":"https://sfcheung.github.io/semptools/reference/rotate_resid.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate the residuals of selected nodes — rotate_resid","title":"Rotate the residuals of selected nodes — rotate_resid","text":"Rotate residuals selected nodes.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rotate_resid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate the residuals of selected nodes — rotate_resid","text":"","code":"rotate_resid(semPaths_plot, rotate_resid_list = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/rotate_resid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate the residuals of selected nodes — rotate_resid","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. rotate_resid_list named vector list named list. named vector, name element node residual rotated, value degree rotate. 12 o'clock position zero degree. Positive degree denotes clockwise rotation, negative degree denotes anticlockwise rotation. example, c(x3 = 45, x4 = -45) means rotating residual x3 45 degrees clockwise, rotating residual x4 45 degrees anticlockwise. list named lists, named list two named values: node rotate. position residual node placed rotate, degree. example, list(list(node = \"x3\", rotate =  45), list(node = \"x4\", rotate = -45)) equivalent c(x3 = 45, x4 = -45).","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rotate_resid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate the residuals of selected nodes — rotate_resid","text":"qgraph::qgraph object based original one, loopRotation attributes selected nodes modified.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rotate_resid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate the residuals of selected nodes — rotate_resid","text":"Modify qgraph::qgraph object generated semPlot::semPaths rotate residuals selected nodes. Currently supports \"ram\" similar styles semPlot::semPaths.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/rotate_resid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate the residuals of selected nodes — rotate_resid","text":"","code":"mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m)   my_rotate_resid_vector <- c(x3 = 45, x4 = -45)  p_pa2v <- rotate_resid(p_pa, my_rotate_resid_vector) plot(p_pa2v)   my_rotate_resid_list <- list(list(node = \"x3\", rotate =  45),                          list(node = \"x4\", rotate = -45))  p_pa2l <- rotate_resid(p_pa, my_rotate_resid_list) plot(p_pa2l)"},{"path":"https://sfcheung.github.io/semptools/reference/sem_2nd_order_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dataset sem_2nd_order_example — sem_2nd_order_example","title":"Sample dataset sem_2nd_order_example — sem_2nd_order_example","text":"sample dataset fitting latent variable model two 2nd-order factors.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/sem_2nd_order_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dataset sem_2nd_order_example — sem_2nd_order_example","text":"","code":"sem_2nd_order_example"},{"path":"https://sfcheung.github.io/semptools/reference/sem_2nd_order_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample dataset sem_2nd_order_example — sem_2nd_order_example","text":"object class data.frame 500 rows 21 columns.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/sem_2nd_order_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample dataset sem_2nd_order_example — sem_2nd_order_example","text":"Twenty one variables (x01 x21), 500 cases. Sample model fit (lavaan::model.syntax notation)","code":"mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14   f5 =~ x15 + x16 + x17 + x18   f6 =~ x19 + x20 + x21   f21 =~ 1*f1 + f3 + f4   f22 =~ 1*f2 + f5 + f6   f22 ~ f21 '"},{"path":"https://sfcheung.github.io/semptools/reference/sem_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample dataset sem_example — sem_example","title":"Sample dataset sem_example — sem_example","text":"sample dataset fitting latent variable model.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/sem_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample dataset sem_example — sem_example","text":"","code":"sem_example"},{"path":"https://sfcheung.github.io/semptools/reference/sem_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample dataset sem_example — sem_example","text":"object class data.frame 200 rows 14 columns.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/sem_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample dataset sem_example — sem_example","text":"Fourteen variables (x01 x14), 100 cases. Sample model fit (lavaan::model.syntax notation)","code":"mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14   f3 ~  f1 + f2   f4 ~  f1 + f3  '"},{"path":"https://sfcheung.github.io/semptools/reference/semptools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"semptools: Customizing Structural Equation Modelling Plots — semptools-package","title":"semptools: Customizing Structural Equation Modelling Plots — semptools-package","text":"function focus specific ways customize graph. use 'qgraph' output first argument, return modified 'qgraph' object. allows functions chained pipe operator.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/reference/semptools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"semptools: Customizing Structural Equation Modelling Plots — semptools-package","text":"Maintainer: Shu Fai Cheung shufai.cheung@gmail.com (ORCID) Authors: Mark Hok Chio Lai marklhc@gmail.com (ORCID)","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_cfa_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","title":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","text":"Configure layout factors adjust aspects CFA graph semPaths.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_cfa_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","text":"","code":"set_cfa_layout(   semPaths_plot,   indicator_order = NULL,   indicator_factor = NULL,   fcov_curve = 0.4,   loading_position = 0.5,   point_to = \"down\" )"},{"path":"https://sfcheung.github.io/semptools/reference/set_cfa_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","text":"semPaths_plot qgraph::qgraph object generated semPaths, similar qgraph object modified semptools functions. indicator_order string vector indicators. order names order indicators graph, drawn bottom graph. indicators grouped factors load . example, x1, x2, x4 load f2, x3, x5, x6 load f1, vector either c(\"x1\", \"x2\", \"x4\", \"x3\", \"x5\", \"x6\") c(\"x3\", \"x5\", \"x6\", \"x1\", \"x2\", \"x4\"). Indicators within group can ordered way. named vector, names used argument indicator_factor. NULL (default), auto_indicator_order() called determine indicator order automatically. indicator_factor string vector length indicator order, storing name factor indicator indicator_factor loads . example, x1, x2, x4 load f2, x3, x5, x6 load f1, indicator_order c(\"x3\", \"x5\", \"x6\", \"x1\", \"x2\", \"x4\"), indicator_factor c(\"f2\", \"f2\", \"f2\", \"f1\", \"f1\", \"f1\"). NULL (default) indicator_order named vector (supplied users generated auto_indicator_order()), set names indicator_order. fcov_curve number used set curvature inter-factor covariances. Default .4. loading_position positions factor loadings. Default .5, middle arrows. Larger number, closer loadings indicators. Smaller number, closer loadings factors. point_to Can \"\", \"left\", \"\", \"right\". Specify direction factors \"point\" indicators. Default \"\".","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_cfa_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","text":"qgraph::qgraph based original one, various aspects model modified.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_cfa_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","text":"Modify qgraph::qgraph object generated semPaths based confirmatory factor analysis model.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_cfa_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure the layout of factors of a CFA graph by semPaths — set_cfa_layout","text":"","code":"library(lavaan) library(semPlot) mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14  ' fit_cfa <- lavaan::sem(mod, cfa_example) lavaan::parameterEstimates(fit_cfa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>    lhs op rhs    est pvalue #> 1   f1 =~ x01  1.000     NA #> 2   f1 =~ x02  1.097  0.000 #> 3   f1 =~ x03  1.247  0.000 #> 4   f2 =~ x04  1.000     NA #> 5   f2 =~ x05 -0.040  0.587 #> 6   f2 =~ x06  1.098  0.000 #> 7   f2 =~ x07  0.771  0.000 #> 8   f3 =~ x08  1.000     NA #> 9   f3 =~ x09  0.937  0.000 #> 10  f3 =~ x10  1.785  0.000 #> 11  f4 =~ x11  1.000     NA #> 12  f4 =~ x12  0.949  0.000 #> 13  f4 =~ x13 -0.077  0.356 #> 14  f4 =~ x14  1.184  0.000 #> 15 x01 ~~ x01  0.969  0.000 #> 16 x02 ~~ x02  0.853  0.000 #> 17 x03 ~~ x03  0.976  0.000 #> 18 x04 ~~ x04  0.725  0.000 #> 19 x05 ~~ x05  0.954  0.000 #> 20 x06 ~~ x06  1.161  0.000 #> 21 x07 ~~ x07  0.903  0.000 #> 22 x08 ~~ x08  1.026  0.000 #> 23 x09 ~~ x09  1.119  0.000 #> 24 x10 ~~ x10  0.566  0.009 #> 25 x11 ~~ x11  1.231  0.000 #> 26 x12 ~~ x12  1.032  0.000 #> 27 x13 ~~ x13  0.990  0.000 #> 28 x14 ~~ x14  0.985  0.000 #> 29  f1 ~~  f1  0.855  0.000 #> 30  f2 ~~  f2  1.119  0.000 #> 31  f3 ~~  f3  0.585  0.000 #> 32  f4 ~~  f4  0.943  0.000 #> 33  f1 ~~  f2 -0.173  0.059 #> 34  f1 ~~  f3  0.387  0.000 #> 35  f1 ~~  f4 -0.178  0.041 #> 36  f2 ~~  f3 -0.112  0.132 #> 37  f2 ~~  f4  0.593  0.000 #> 38  f3 ~~  f4 -0.181  0.014 p <- semPaths(fit_cfa, whatLabels=\"est\",        sizeMan = 2.5,        nCharNodes = 0, nCharEdges = 0,        edge.width = 0.8, node.width = 0.7,        edge.label.cex = 0.6,        style = \"ram\",        mar = c(10,10,10,10))  indicator_order  <- c(\"x04\", \"x05\", \"x06\", \"x07\", \"x01\", \"x02\", \"x03\", \"x11\",                       \"x12\", \"x13\", \"x14\", \"x08\", \"x09\", \"x10\") indicator_factor <- c( \"f2\",  \"f2\",  \"f2\",  \"f2\",  \"f1\",  \"f1\",  \"f1\",  \"f4\",                       \"f4\",  \"f4\",  \"f4\",  \"f3\",  \"f3\",  \"f3\") p2 <- set_cfa_layout(p, indicator_order,                          indicator_factor,                          fcov_curve = 1.5,                          loading_position = .8) plot(p2)   # Use a named vector for indicator_order indicator_order2 <- c(f2 = \"x04\", f2 = \"x05\", f2 = \"x06\", f2 = \"x07\",                      f1 = \"x01\", f1 = \"x02\", f1 = \"x03\",                      f4 = \"x11\", f4 = \"x12\", f4 = \"x13\", f4 = \"x14\",                      f3 = \"x08\", f3 = \"x09\", f3 = \"x10\") p2 <- set_cfa_layout(p,                     indicator_order = indicator_order2,                     fcov_curve = 1.5,                     loading_position = .8) plot(p2)  # Use automatically generated indicator_order and indicator_factor p2 <- set_cfa_layout(p,                     fcov_curve = 1.5,                     loading_position = .8) plot(p2)   p2 <- set_cfa_layout(p, indicator_order,                          indicator_factor,                          fcov_curve = 1.5,                          loading_position = .8,                          point_to = \"left\") plot(p2)  p2 <- set_cfa_layout(p, indicator_order,                          indicator_factor,                          fcov_curve = 1.5,                          loading_position = .8,                          point_to = \"up\") plot(p2)  p2 <- set_cfa_layout(p, indicator_order,                          indicator_factor,                          fcov_curve = 1.5,                          loading_position = .8,                          point_to = \"right\") plot(p2)"},{"path":"https://sfcheung.github.io/semptools/reference/set_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Bend or Straighten Selected edges — set_curve","title":"Bend or Straighten Selected edges — set_curve","text":"Set curve attributes selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bend or Straighten Selected edges — set_curve","text":"","code":"set_curve(semPaths_plot, curve_list = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/set_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bend or Straighten Selected edges — set_curve","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. curve_list named vector list named list. named vector, name element path specified lavaan::model.syntax appeared lavaan::parameterEstimates(). example, change curve attribute path regressing y x, name \"y ~ x\". change curve attribute covariance x1 x2, name \"x1 ~~ x2\". example, c(\"y ~ x1\" = -3, \"x1 ~~ x2\" = 2) change curve attributes path x1 y covariance x1 x2 -3 2, respectively. order two nodes may matter covariances. Therefore, curve covariance changed, try switching order two nodes. list named lists, named list three named values: , , new_curve. curve attribute edge set new_curve.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bend or Straighten Selected edges — set_curve","text":"qgraph::qgraph based original one, curve attributes selected edges changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bend or Straighten Selected edges — set_curve","text":"Modified qgraph::qgraph object generated semPlot::semPaths change curve attributes selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bend or Straighten Selected edges — set_curve","text":"","code":"mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m)   my_curve_vector <- c(\"x2 ~~ x1\" = -1,                     \"x4 ~ x1\" = 1)  p_pa2v <- set_curve(p_pa, my_curve_vector) plot(p_pa2v)   my_curve_list <- list(list(from = \"x1\", to = \"x2\", new_curve = -1),                     list(from = \"x1\", to = \"x4\", new_curve =  1))  p_pa2l <- set_curve(p_pa, my_curve_list) plot(p_pa2l)"},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Attributes of Selected Edges — set_edge_attribute","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"Set arbitrary attributes selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"","code":"set_edge_attribute(semPaths_plot, values = NULL, attribute_name = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. values named vector list named list. See Details section set argument. attribute_name name attribute changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"qgraph::qgraph based original one, selected attributes selected edges changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"Modify qgraph::qgraph object generated semPlot::semPaths change selected attributes selected edges. function designed general one changes attributes named user. user needs make sure attribute actually exists, values valid named attribute.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":"setting-the-value-of-values","dir":"Reference","previous_headings":"","what":"Setting the value of values","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"argument can set two ways. named vector, name element path specified lavaan::model.syntax appeared lavaan::parameterEstimates(). example, attributes changed colors selected edges, change color path regressing y x, name \"y ~ x\". change color covariance x1 x2, name \"x1 ~~ x2\". Therefore, c(\"y ~ x1\" = \"red\", \"x1 ~~ x2\" = \"blue\") changes colors path x1 y covariance x1 x2 \"red\" \"blue\", respectively. order two nodes may matter covariances. Therefore, attribute covariance changed, try switching order two nodes. list named lists, named list three named values: , , new_value. attribute edge set new_value. second approach longer recommended, though kept backward compatibility.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_attribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the Attributes of Selected Edges — set_edge_attribute","text":"","code":"mod_pa <-   'x1 ~~ x2    x3 ~  x1 + x2    x4 ~  x1 + x3   ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                 NA, \"x3\", \"x4\",               \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",             style = \"ram\",             nCharNodes = 0, nCharEdges = 0,             layout = m)   my_values_vector <- c(\"x2 ~~ x1\" = \"red\",                       \"x4 ~ x1\" = \"blue\")  p_pa2v <- set_edge_attribute(p_pa,                              values = my_values_vector,                              attribute_name = \"color\") plot(p_pa2v)   my_values_list <- list(list(from = \"x1\", to = \"x2\", new_value = \"red\"),                        list(from = \"x1\", to = \"x4\", new_value =  \"blue\"))  p_pa2l <- set_edge_attribute(p_pa,                              values = my_values_list,                              attribute_name = \"color\")  plot(p_pa2l)"},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Colors of Selected Edges — set_edge_color","title":"Set the Colors of Selected Edges — set_edge_color","text":"Set colors selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Colors of Selected Edges — set_edge_color","text":"","code":"set_edge_color(semPaths_plot, color_list = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Colors of Selected Edges — set_edge_color","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. color_list named vector list named list. See Details section set argument.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Colors of Selected Edges — set_edge_color","text":"qgraph::qgraph based original one, colors selected edges changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the Colors of Selected Edges — set_edge_color","text":"Modified qgraph::qgraph object generated semPlot::semPaths change colors selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":"setting-the-value-of-color-list","dir":"Reference","previous_headings":"","what":"Setting the value of color_list","title":"Set the Colors of Selected Edges — set_edge_color","text":"argument can set two ways. named vector, name element path specified lavaan::model.syntax appeared lavaan::parameterEstimates(). example, change color path regressing y x, name \"y ~ x\". change color covariance x1 x2, name \"x1 ~~ x2\". Therefore, c(\"y ~ x1\" = \"red\", \"x1 ~~ x2\" = \"blue\") changes colors path x1 y covariance x1 x2 \"red\" \"blue\", respectively. order two nodes may matter covariances. Therefore, attribute covariance changed, try switching order two nodes. list named lists, named list three named values: , , new_color. attribute edge set new_color. second approach longer recommended, though kept backward compatibility.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the Colors of Selected Edges — set_edge_color","text":"","code":"mod_pa <-   'x1 ~~ x2    x3 ~  x1 + x2    x4 ~  x1 + x3   ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                 NA, \"x3\", \"x4\",               \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",             style = \"ram\",             nCharNodes = 0, nCharEdges = 0,             layout = m)   my_color_vector <- c(\"x2 ~~ x1\" = \"red\",                      \"x4 ~ x1\" = \"blue\")  p_pa2v <- set_edge_color(p_pa, my_color_vector) plot(p_pa2v)   my_color_list <- list(list(from = \"x1\", to = \"x2\", new_color = \"red\"),                      list(from = \"x1\", to = \"x4\", new_color =  \"blue\"))  p_pa2l <- set_edge_color(p_pa, my_color_list) plot(p_pa2l)"},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_label_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the positions of edge labels of selected edges — set_edge_label_position","title":"Set the positions of edge labels of selected edges — set_edge_label_position","text":"Set positions edge labels selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_label_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the positions of edge labels of selected edges — set_edge_label_position","text":"","code":"set_edge_label_position(semPaths_plot, position_list = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_label_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the positions of edge labels of selected edges — set_edge_label_position","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. position_list named vector list named lists. named vector, name element path specified lavaan::model.syntax appeared lavaan::parameterEstimates(). example, change position edge label path regressing y x, name \"y ~ x\". value position. mid-point edge 0.5. closer value 1, closer label left-hand-side node (y example). closer value 0, close label right-hand-side node (x example). example, c(\"y ~ x1\" = .2, \"y ~ x2\" = .7) moves path coefficient x1 y closer x, path coefficient x2 y closer y. list named lists, named list three named values: , , new_position. edge label position edge set new_position. example, list(list(= \"x1\", = \"y\", new_position = .2), list(= \"x2\", = \"y\", new_position = .7)) equivalent named vector .","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_label_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the positions of edge labels of selected edges — set_edge_label_position","text":"qgraph::qgraph based original one, edge label positions selected edges changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_label_position.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the positions of edge labels of selected edges — set_edge_label_position","text":"Modify qgraph::qgraph object generated semPlot::semPaths change edge label positions selected edges.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_edge_label_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the positions of edge labels of selected edges — set_edge_label_position","text":"","code":"mod_pa <-  'x1 ~~ x2   x3 ~  x1 + x2   x4 ~  x1 + x3  ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                NA, \"x3\", \"x4\",              \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",            style = \"ram\",            nCharNodes = 0, nCharEdges = 0,            layout = m)   my_position_vector <- c(\"x3 ~ x2\" = .25,                        \"x4 ~ x1\" = .75) p_pa2v <- set_edge_label_position(p_pa, my_position_vector) plot(p_pa2v)   my_position_list <- list(list(from = \"x2\", to = \"x3\", new_position =  .25),                        list(from = \"x1\", to = \"x4\", new_position =  .75)) p_pa2l <- set_edge_label_position(p_pa, my_position_list) plot(p_pa2l)"},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Attributes of Selected Nodes — set_node_attribute","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"Set arbitrary attributes selected nodes","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"","code":"set_node_attribute(semPaths_plot, values = NULL, attribute_name = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"semPaths_plot qgraph::qgraph object generated semPlot::semPaths, similar qgraph object modified semptools functions. values named vector list named list. See Details section set argument. attribute_name name attribute changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"qgraph::qgraph based original one, selected attributes selected nodes changed.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"Modify qgraph::qgraph object generated semPlot::semPaths change selected attributes selected nodes. function designed general one changes attributes named user. user needs make sure attribute actually exists, values valid named attribute.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":"setting-the-value-of-values","dir":"Reference","previous_headings":"","what":"Setting the value of values","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"argument can set two ways. named vector, name element nodes attributes changed. names need displayed names plotted, may different names mode. example, attributes changed colors selected nodes, change color x changed, name \"x\". Therefore, c(\"y\" = \"red\", \"x\" = \"red\") changes colors nodes y x \"red\" \"blue\", respectively. list named lists, named list two named values: node new_value. attribute node set new_value. second approach longer recommended, though kept backward compatibility.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_node_attribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the Attributes of Selected Nodes — set_node_attribute","text":"","code":"mod_pa <-   'x1 ~~ x2    x3 ~  x1 + x2    x4 ~  x1 + x3   ' fit_pa <- lavaan::sem(mod_pa, pa_example) lavaan::parameterEstimates(fit_pa)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>   lhs op rhs   est pvalue #> 1  x1 ~~  x2 0.005  0.957 #> 2  x3  ~  x1 0.537  0.000 #> 3  x3  ~  x2 0.376  0.000 #> 4  x4  ~  x1 0.111  0.382 #> 5  x4  ~  x3 0.629  0.000 #> 6  x3 ~~  x3 0.874  0.000 #> 7  x4 ~~  x4 1.194  0.000 #> 8  x1 ~~  x1 0.933  0.000 #> 9  x2 ~~  x2 1.017  0.000 m <- matrix(c(\"x1\",   NA,   NA,                 NA, \"x3\", \"x4\",               \"x2\",   NA,   NA), byrow = TRUE, 3, 3) p_pa <- semPlot::semPaths(fit_pa, whatLabels=\"est\",             style = \"ram\",             nCharNodes = 0, nCharEdges = 0,             layout = m)   my_color_vector <- c(x3 = \"red\", x4 = \"blue\")  p_pa2v <- set_node_attribute(p_pa, my_color_vector, attribute_name = \"color\") plot(p_pa2v)   my_color_list <- list(list(node = \"x3\", new_value = \"green\"),                       list(node = \"x4\", new_value = \"red\"))  p_pa2l <- set_node_attribute(p_pa, my_color_list, attribute_name = \"color\") plot(p_pa2l)"},{"path":"https://sfcheung.github.io/semptools/reference/set_sem_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","title":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","text":"Configure layout factors adjust aspects SEM graph semPlot::semPaths.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_sem_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","text":"","code":"set_sem_layout(   semPaths_plot,   indicator_order = NULL,   indicator_factor = NULL,   factor_layout = NULL,   factor_point_to = NULL,   indicator_push = NULL,   indicator_spread = NULL,   loading_position = 0.5 )"},{"path":"https://sfcheung.github.io/semptools/reference/set_sem_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","text":"semPaths_plot qgraph::qgraph object generated semPaths, similar qgraph object modified semptools functions. indicator_order string vector indicators. order names order indicators graph, drawn bottom graph. indicators grouped factors load . example, x1, x2, x4 load f2, x3, x5, x6 load f1, vector either c(\"x1\", \"x2\", \"x4\", \"x3\", \"x5\", \"x6\") c(\"x3\", \"x5\", \"x6\", \"x1\", \"x2\", \"x4\"). Indicators within group can ordered way. named vector, names used argument indicator_factor. NULL (default), auto_indicator_order() called determine indicator order automatically. indicator_factor string vector length indicator order, storing name factor indicator indicator_factor loads . example, x1, x2, x4 load f2, x3, x5, x6 load f1, indicator_order c(\"x3\", \"x5\", \"x6\", \"x1\", \"x2\", \"x4\"), indicator_factor c(\"f2\", \"f2\", \"f2\", \"f1\", \"f1\", \"f1\"). NULL (default) indicator_order named vector (supplied users generated auto_indicator_order()), set names indicator_order. factor_layout matrix arbitrary size. matrix serve grid users specify latent factor placed approximately graph. cell contain NA name latent factor. locations latent factors must explicitly specified matrix. factor_point_to Can named character vector names names factors, matrix size factor_layout. matrix, matrix specifies indicators factor positioned. cell contain NA one strings: \"\", \"left\", \"\", \"right\". direction corresponding latent factor (specified factor_layout) points indicators. named character vector, values must directions, names factors. vector converted internally auto_factor_point_to() create matrix direction. indicator_push (Optional) argument used adjust positions indicators selected latent factors. can named vector list named lists. named vector, name factor indicators \"pushed\", value \"hard\" push : multiplier distance factor indicators. value 1, change. value greater 1, indicators pushed away latent factor. value less 1, indicators pulled toward latent factor. example, push indicators f3 away f3, pull indicators f4 toward f4, argument can set c(f3 = 1.5, f4 = .5). list named list, named list two named elements: node, name latent factor, push, positions indicators adjusted. example, effect vector , list list(list(node = \"f3\", push = 1.5), list(node = \"f4\", push = .5)). indicator_spread (Optional) argument used adjust distance indicators selected latent factors. can named vector list named lists. named vector, name factor indicators spread . value multiplier distance neighboring indicators. value equal 1, change. Larger one, indicators \"spread\" away . Less one, indicators placed closer others. example, spread indicators f1 f4 farther away , argument can set c(f1 = 2, f4 = 1.5), indicators f1 spread f4. list named list, named list two named elements: node, name latent factor, spread, distance indicators adjusted. example, effect vector , argument can set list(list(node = \"f1\", spread = 2), list(node = \"f4\", spread = 1.5)). loading_position (Optional) Default .5. used adjust position loadings. one single number, used set positions loadings. .5, loadings placed center arrows. Larger number, closer loadings indicators. Smaller number, closer latent factors. argument also accepts named vector list named lists, allowing users specify positions loadings factor separately. named vector, element, name factor whose loadings moved. value positions loadings. default .50. need specify positions factors changed .50 values. example, move loadings f2 closer indicators f4 close f4, argument can set c(f2 = .7, f4 = .3). list named list, named list two named elements: node, name latent factor, position, positions loadings factors. effect vector , list can used: list(list(node = \"f2\", position = .7), list(node = \"f4\", position = .3)).","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_sem_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","text":"qgraph::qgraph based original one, various aspects model modified.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_sem_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","text":"Modify qgraph::qgraph object generated semPaths based SEM model latent factors. Since version 0.2.9.5, function natively supports observed exogenous variable. variable listed indicator_order indicator_factor, factor indicator, function assume observed exogenous variable. positioned factor according factor_layout, indicators drawn. versions older 0.2.9.5, observed exogenous variable needs specified one-indicator factor model specification function work.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/set_sem_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure the layout of factors of an SEM graph by semPlot::semPaths — set_sem_layout","text":"","code":"library(lavaan) library(semPlot) mod <-  'f1 =~ x01 + x02 + x03   f2 =~ x04 + x05 + x06 + x07   f3 =~ x08 + x09 + x10   f4 =~ x11 + x12 + x13 + x14   f3 ~  f1 + f2   f4 ~  f1 + f3  ' fit_sem <- lavaan::sem(mod, sem_example) lavaan::parameterEstimates(fit_sem)[, c(\"lhs\", \"op\", \"rhs\", \"est\", \"pvalue\")] #>    lhs op rhs    est pvalue #> 1   f1 =~ x01  1.000     NA #> 2   f1 =~ x02  1.124  0.000 #> 3   f1 =~ x03  1.310  0.000 #> 4   f2 =~ x04  1.000     NA #> 5   f2 =~ x05  0.079  0.205 #> 6   f2 =~ x06  1.120  0.000 #> 7   f2 =~ x07  0.736  0.000 #> 8   f3 =~ x08  1.000     NA #> 9   f3 =~ x09  0.819  0.000 #> 10  f3 =~ x10  1.230  0.000 #> 11  f4 =~ x11  1.000     NA #> 12  f4 =~ x12  0.773  0.000 #> 13  f4 =~ x13  0.064  0.160 #> 14  f4 =~ x14  0.928  0.000 #> 15  f3  ~  f1  0.612  0.000 #> 16  f3  ~  f2  0.584  0.000 #> 17  f4  ~  f1 -0.542  0.001 #> 18  f4  ~  f3  0.980  0.000 #> 19 x01 ~~ x01  1.055  0.000 #> 20 x02 ~~ x02  1.015  0.000 #> 21 x03 ~~ x03  1.028  0.000 #> 22 x04 ~~ x04  0.933  0.000 #> 23 x05 ~~ x05  0.795  0.000 #> 24 x06 ~~ x06  0.771  0.000 #> 25 x07 ~~ x07  1.071  0.000 #> 26 x08 ~~ x08  0.976  0.000 #> 27 x09 ~~ x09  0.937  0.000 #> 28 x10 ~~ x10  1.164  0.000 #> 29 x11 ~~ x11  1.008  0.000 #> 30 x12 ~~ x12  1.033  0.000 #> 31 x13 ~~ x13  0.846  0.000 #> 32 x14 ~~ x14  0.807  0.000 #> 33  f1 ~~  f1  0.714  0.000 #> 34  f2 ~~  f2  1.277  0.000 #> 35  f3 ~~  f3  0.759  0.000 #> 36  f4 ~~  f4  1.188  0.000 #> 37  f1 ~~  f2  0.016  0.856 p <- semPaths(fit_sem, whatLabels=\"est\",        sizeMan = 5,        nCharNodes = 0, nCharEdges = 0,        edge.width = 0.8, node.width = 0.7,        edge.label.cex = 0.6,        style = \"ram\",        mar = c(10,10,10,10))  indicator_order  <- c(\"x04\", \"x05\", \"x06\", \"x07\", \"x01\", \"x02\", \"x03\",                      \"x11\", \"x12\", \"x13\", \"x14\", \"x08\", \"x09\", \"x10\") indicator_factor <- c( \"f2\",  \"f2\",  \"f2\",  \"f2\",  \"f1\",  \"f1\",  \"f1\",                      \"f4\",  \"f4\",  \"f4\",  \"f4\",  \"f3\",  \"f3\",  \"f3\") factor_layout <- matrix(c(\"f1\",   NA,   NA,                            NA, \"f3\", \"f4\",                          \"f2\",   NA,   NA), byrow = TRUE, 3, 3) factor_point_to <- matrix(c(\"left\",     NA,      NA,                                NA, \"down\", \"down\",                            \"left\",     NA,      NA), byrow = TRUE, 3, 3) indicator_push <- c(f3 = 2, f4 = 1.5) indicator_spread <- c(f1 = 2, f2 = 2) loading_position <- c(f1 = .5, f2 = .8, f3 = .8) # Pipe operator can be used if desired p2 <- set_sem_layout(p,                       indicator_order = indicator_order,                       indicator_factor = indicator_factor,                       factor_layout = factor_layout,                       factor_point_to = factor_point_to,                       indicator_push = indicator_push,                       indicator_spread = indicator_spread,                       loading_position = loading_position) p2 <- set_curve(p2, c(\"f2 ~ f1\" = -1,                      \"f4 ~ f1\" = 1.5)) p2 <- mark_sig(p2, fit_sem) p2 <- mark_se(p2, fit_sem, sep = \"\\n\") plot(p2)   # Use a named vector for indicator_order indicator_order2  <- c(f2 = \"x04\", f2 = \"x05\", f2 = \"x06\", f2 = \"x07\",                       f1 = \"x01\", f1 = \"x02\", f1 = \"x03\",                       f4 = \"x11\", f4 = \"x12\", f4 = \"x13\", f4 = \"x14\",                       f3 = \"x08\", f3 = \"x09\", f3 = \"x10\") p2 <- set_sem_layout(p,                       indicator_order = indicator_order2,                       factor_layout = factor_layout,                       factor_point_to = factor_point_to,                       indicator_push = indicator_push,                       indicator_spread = indicator_spread,                       loading_position = loading_position) plot(p2)   # Use automatically generated indicator_order and indicator_factor p2 <- set_sem_layout(p,                       factor_layout = factor_layout,                       factor_point_to = factor_point_to,                       indicator_push = indicator_push,                       indicator_spread = indicator_spread,                       loading_position = loading_position) plot(p2)  # Use named character vector for factor_point_to directions <- c(f1 = \"left\",                f2 = \"left\",                f3 = \"down\",                f4 = \"down\") p2v2 <- set_sem_layout(p,                       indicator_order = indicator_order,                       indicator_factor = indicator_factor,                       factor_layout = factor_layout,                       factor_point_to = directions,                       indicator_push = indicator_push,                       indicator_spread = indicator_spread,                       loading_position = loading_position) p2v2 <- set_curve(p2v2, c(\"f2 ~ f1\" = -1,                          \"f4 ~ f1\" = 1.5)) p2v2 <- mark_sig(p2v2, fit_sem) p2v2 <- mark_se(p2v2, fit_sem, sep = \"\\n\") plot(p2v2)   #Lists of named list which are equivalent to the vectors above: #indicator_push <- list(list(node = \"f3\", push =   2), #                       list(node = \"f4\", push =   1.5)) #indicator_spread <- list(list(node = \"f1\", spread =   2), #                         list(node = \"f2\", spread =   2)) #loading_position <- list(list(node = \"f1\", position = .5), #                         list(node = \"f2\", position = .8), #                         list(node = \"f3\", position = .8))"},{"path":"https://sfcheung.github.io/semptools/reference/to_list_of_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a named vector to a list of lists — to_list_of_lists","title":"Convert a named vector to a list of lists — to_list_of_lists","text":"Convert named vector list lists, used various functions semptools.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/to_list_of_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a named vector to a list of lists — to_list_of_lists","text":"","code":"to_list_of_lists(input, name1 = NULL, name2 = NULL, name3 = NULL)"},{"path":"https://sfcheung.github.io/semptools/reference/to_list_of_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a named vector to a list of lists — to_list_of_lists","text":"input named vector name1 name first element list--list. Default NULL. name2 name second element list--list. Defaultis NULL. name3 name third element list--list. Default NULL. argument NULL, names vector elements split using lavaan syntax (calling lavaan::lavParseModelString()), right-hand side (rhs) left-hand side (lhs) element assigned name1 name2, respectively.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/to_list_of_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a named vector to a list of lists — to_list_of_lists","text":"list lists.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/to_list_of_lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a named vector to a list of lists — to_list_of_lists","text":"function used users, used internally functions semptools.","code":""},{"path":"https://sfcheung.github.io/semptools/reference/to_list_of_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a named vector to a list of lists — to_list_of_lists","text":"","code":"x <- c(\"x1 ~~ x2\" = -1, \"x4 ~ x1\" = 1) to_list_of_lists(x, name1 = \"from\", name2 = \"to\", name3 = \"new_curve\") #> [[1]] #> [[1]]$from #> [1] \"x2\" #>  #> [[1]]$to #> [1] \"x1\" #>  #> [[1]]$new_curve #> [1] -1 #>  #>  #> [[2]] #> [[2]]$from #> [1] \"x1\" #>  #> [[2]]$to #> [1] \"x4\" #>  #> [[2]]$new_curve #> [1] 1 #>  #>  #list(list(from = \"x1\", to = \"x2\", new_curve = -1), #     list(from = \"x1\", to = \"x4\", new_curve =  1))  y <- c(x1 = 0, x2 = 180, x3 = 140, x4 = 140) to_list_of_lists(y, name1 = \"node\", name2 = \"rotate\") #> [[1]] #> [[1]]$node #> [1] \"x1\" #>  #> [[1]]$rotate #> [1] 0 #>  #>  #> [[2]] #> [[2]]$node #> [1] \"x2\" #>  #> [[2]]$rotate #> [1] 180 #>  #>  #> [[3]] #> [[3]]$node #> [1] \"x3\" #>  #> [[3]]$rotate #> [1] 140 #>  #>  #> [[4]] #> [[4]]$node #> [1] \"x4\" #>  #> [[4]]$rotate #> [1] 140 #>  #>  #list(list(node = \"x1\", rotate =   0), #     list(node = \"x2\", rotate = 180), #     list(node = \"x3\", rotate = 140), #     list(node = \"x4\", rotate = 140))"},{"path":[]},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"new-features-0-2-11-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"semptools 0.2.11.3","text":"Added set_edge_attribute() change attribute edges. (0.2.10.2) Added set_node_attribute() change attribute nodes. (0.2.10.3) Added set_edge_color() change colors edges. (0.2.10.2) Added rescale_layout() expand plot fit rectangle bounded -1 1 vertically horizontally. (0.2.11.1)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"improvement-0-2-11-3","dir":"Changelog","previous_headings":"","what":"Improvement","title":"semptools 0.2.11.3","text":"Updated mark_sig() accept data frame p-values. Users can supply p-values computed functions. (0.2.11.3) Updated mark_se() accept data frame standard errors. Users can supply standard errors computed functions. (0.2.11.3) Updated mark_sig() use p-values lavaan::standardizedSolution(). Users need explicitly request standardized solution p-values setting argument std_type. (0.2.11.3) Updated mark_se() use standard errors lavaan::standardizedSolution(). Users need explicitly request standardized solution standard errors setting argument std_type. (0.2.11.3)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"miscellaneous-0-2-11-3","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"semptools 0.2.11.3","text":"Revised change_node_label() address issue plot.qgraph(). label.cex now used expected. (0.2.10.1) Fixed R CMD check issue links Rd files. (0.2.10.4)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0210","dir":"Changelog","previous_headings":"","what":"semptools 0.2.10","title":"semptools 0.2.10","text":"CRAN release: 2023-10-15","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"new-features-0-2-10","dir":"Changelog","previous_headings":"","what":"New Features","title":"semptools 0.2.10","text":"Added auto_factor_point_to() creating factor_point_to matrix. Revised set_sem_layout() allow users use named vector factor_point_to argument. (0.2.9.15) Added auto_indicator_order() lavaan_indicator_order() setting indicator order set_sem_layout() set_cfa_layout(). Can handle nodes labels changed. (0.2.9.18, 0.2.9.24) Revised set_cfa_layout() set_sem_layout() set indicator_order indicator_factor automatically supplied. Node labels must string option work. (0.2.9.18, 0.2.9.23) Added pkgdown articles setting layout model latent factors exogenous observed variables. (0.2.9.25)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"bug-fixes-0-2-10","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"semptools 0.2.10","text":"Fixed set_cfa_layout() work LISREL-style graphs. (0.2.9.13) Fixed set_cfa_layout() work model without factor covariances (e.g., exoCov = FALSE calling semPlot::semPaths()). (0.2.9.14) Fixed bug auto_factor_point_to(): Cells direction specified now set NA. (0.2.9.21)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"miscellaneous-0-2-10","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"semptools 0.2.10","text":"Added R CMD check noSuggests. (0.2.9.12) Fixed bug setting pkgdown. (0.2.9.16) Add DoNotPlot = TRUE tests prevent semPlot::semPaths() plotting graphs tests. (0.2.9.17, 0.2.9.20) Added helper add_object(). (0.2.9.18) Removed dplyr functions code removed dplyr Imports. (0.2.9.19) Removed check factors direction specified auto_factor_point_to(). “factor” may manifest variable without indicators. (0.2.9.20) Added two internal helpers check node labels (labels changed? labels non-string?). (0.2.9.22) Removed mention change_node_label2, exported, help page. (0.2.9.26, 0.2.9.27) Made warning error messages set_cfa_layout() set_sem_layout() informative. (0.2.9.28)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-02911","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.11","title":"semptools 0.2.9.11","text":"CRAN release: 2023-05-31 Used native functions semPlot (semPlot::man() semPlot::lat()) check nodes drop_nodes() keep_nodes(). consequence, semPlot package now Import section. (native functions used future ensure compatibility.) (0.2.9.11)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-02910","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.10","title":"semptools 0.2.9.10","text":"Updated pkgdown site.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0299","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.9","title":"semptools 0.2.9.9","text":"Added support 2nd order factor (see vignette(\"second_order\")). (0.2.9.7) Fixed doc due Roxygen updated 7.2.1. (0.2.9.7) Update GitHub actions. (0.2.9.8) Fixed doc due Roxygen updated 7.2.3. (0.2.9.9) Fixed set_curve(). now work bidirectional edges regardless order nodes specification. (0.2.9.9)","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0296","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.6","title":"semptools 0.2.9.6","text":"CRAN release: 2022-08-25 Fixed several problems pkgdown setting. Roxygen updated 7.2.0 man pages updated accordingly.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0295","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.5","title":"semptools 0.2.9.5","text":"Updated set_sem_layout() support observed exogenous variables.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0294","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.4","title":"semptools 0.2.9.4","text":"Updated drop_nodes(): now works output without covariance matrix (e.g, model generated lavaan::lavaanify() without data).","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0293","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.3","title":"semptools 0.2.9.3","text":"CRAN release: 2021-10-11 Minor fixes errors CRAN checks.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0292","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9.2","title":"semptools 0.2.9.2","text":"CRAN release: 2021-09-27 Minor fixes DESCRIPTION file examples.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"bug-fix-0-2-9-1","dir":"Changelog","previous_headings":"","what":"Bug Fix","title":"semptools 0.2.9.1","text":"Fixed bug set_sem_layout(). Failed work models factors number indicators.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"misc-0-2-9-1","dir":"Changelog","previous_headings":"","what":"Misc","title":"semptools 0.2.9.1","text":"Reformatted help sections functions (wrap text readability). impact uses generated help files.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-029","dir":"Changelog","previous_headings":"","what":"semptools 0.2.9","title":"semptools 0.2.9","text":"Added drop_nodes() keep_nodes(). process semPlotModel object, generated semPlot::semPlotModel(), drop keep selected nodes (e.g., observed variables, latent factors) object. result can passed semPlot::semPaths() draw diagram without dropped nodes. Add layout_matrix. helper function creating layout matrix used semPlot::semPaths(). Users specify positions nodes function create matrix accordingly. mark_sig(), mark_se(), set_cfa_layout() raise error semPlot::semPaths object intercepts terms. function support plots intercept terms yet. Updated change_node_label() support named vectors. Added vignette(\"layout_matrix\") explain layout matrix used semPlot::semPaths(), layout_matrix() can used construct layout matrix. Updated vignettes use named vectors instead “list named lists” functions. Updated vignette(\"semptools\") introduce change_node_label(). magrittr longer required installing package.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-0281","dir":"Changelog","previous_headings":"","what":"semptools 0.2.8.1","title":"semptools 0.2.8.1","text":"Added change_node_label() changing labels nodes. Several functions modified adapt function. Added to_list_of_lists() converting named vector list lists. Specifying list lists necessary cases label may string (e.g., may expression). However, cases, elements strings numbers named vector . function used internally functions, used users.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-028","dir":"Changelog","previous_headings":"","what":"semptools 0.2.8","title":"semptools 0.2.8","text":"Fix bug set_cfa_layout(). now raise error one-factor models. Fix typo errors documentation pages.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-027","dir":"Changelog","previous_headings":"","what":"semptools 0.2.7","title":"semptools 0.2.7","text":"Import pipe operator magrittr users need load package .","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-026","dir":"Changelog","previous_headings":"","what":"semptools 0.2.6","title":"semptools 0.2.6","text":"Update documentation mark_sig() mark_se() emphasize currently require lavaan output.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-025","dir":"Changelog","previous_headings":"","what":"semptools 0.2.5","title":"semptools 0.2.5","text":"Used pkgdown build site. first draft, minimal customization.","code":""},{"path":"https://sfcheung.github.io/semptools/news/index.html","id":"semptools-024","dir":"Changelog","previous_headings":"","what":"semptools 0.2.4","title":"semptools 0.2.4","text":"Alpha release. Ready testing.","code":""}]
